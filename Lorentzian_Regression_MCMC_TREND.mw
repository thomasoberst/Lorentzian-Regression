<?xml version="1.0" encoding="UTF-8"?>
<Worksheet><Version major="6" minor="1"/><View-Properties><Zoom percentage="100"/></View-Properties><Styles><Layout alignment="left" bullet="none" name="Warning"/><Layout alignment="left" bullet="none" firstindent="0.0" leftmargin="0.0" linebreak="space" linespacing="0.0" name="Normal" rightmargin="0.0" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="centred" bullet="none" name="Maple Plot"/><Layout alignment="centred" bullet="none" linespacing="0.5" name="Maple Output"/><Font background="[0,0,0]" bold="true" executable="true" family="Monospaced" foreground="[255,0,0]" name="Maple Input" opaque="false" size="12"/><Font background="[0,0,0]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" name="Text" opaque="false" size="12" underline="false"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Warning" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" family="Times New Roman" foreground="[0,0,255]" name="2D Output" opaque="false" readonly="true" size="12"/></Styles><Group><Input><Text-field layout="Normal" style="Text"><Font size="10">Restart the Maple server to clear old definitions, etc.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">restart:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Text"><Font size="10">Load the special Maple tools packages needed for operations within the <Font italic="true">MCMCGridSPIFI</Font> procedure.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">with(plots): with(plottools): with(stats): with(statplots): with(StringTools): </Text-field></Input><Output><Text-field layout="Warning" style="Warning">Warning, the name changecoords has been redefined</Text-field></Output><Output><Text-field layout="Warning" style="Warning">Warning, the assigned name arrow now has a global binding</Text-field></Output><Output><Text-field layout="Warning" style="Warning">Warning, the previous binding of the name transform has been removed and it now has an assigned value</Text-field></Output><Output><Text-field layout="Warning" style="Warning">Warning, the assigned name Group now has a global binding</Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">*************************************</Text-field><Text-field layout="Normal" style="Text">Initialize the procedure</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">The <Font italic="true">MCMC_TREND</Font> procedure takes the following arguments:</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">Path</Font><Font size="10">: the file path where the TREND LO data files (*.spi) and other files accessed by <Font italic="true">MCMC_TREND</Font> are stored.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">File</Font><Font size="10">: the filename of the data set you wish to work with.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">Pixel</Font><Font size="10">: the pixel whose spectrum you wish to fit.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">BadBins</Font><Font size="10">: a list (enclosed in square brackets and separated by commas) of bins to be removed from the spectrum before the fit is attempted. SPIFI bins (for our best TREND LO measurements) are numbered 1-32 from right to left. If no bins are to be removed, an empty list must be entered: [ ].</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">CParam</Font><Font size="10">: a list of the maximum, minimum, step size, and initial value to use when fitting the Lorentzian centroid.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">FParam</Font><Font size="10">: a list of the maximum, minimum, step size, and initial value to use when fitting the Lorentzian FWHM.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">OParam</Font><Font size="10">: a list of the maximum, minimum, step size, and initial value to use when fitting the baseline offset. In this program, I have defined the baseline as y=m(x-average(x[i]))+b, such that the offset, b, is the offset at the center of the spectrum, not at the y-axis (i.e., not at x=0).</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">SParam</Font><Font size="10">: a list of the maximum, minimum, step size, and initial value to use when fitting the baseline slope.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">HParam</Font><Font size="10">: a list of the maximum, minimum, step size, and initial value to use when fitting the Lorentzian height.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">N</Font><Font size="10">: total number of steps to attempt in your Markov Chain random walk.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">BadN</Font><Font size="10">: number of steps to throw out from the beginning of the Markov Chain (start-up iterations). This is only necessary if you choose an initial point far from the chi^2 minimum.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">sigma</Font><Font size="10">: a parameter that controls the size of proposed steps in the Markov Chain. More precisely, <Font italic="true">sigma</Font> is standard deviation of the random normal distribution which is used to determine the Markov step size.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">r2</Font><Font size="10">: a parameter that controls the acceptance rate of proposed steps in the Markov Chain. (In principle this is best done by changing sigma. While r2 lowers the standard on what points are accepted, sigma raises the actual number of points with good fits to the data!).</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">Nvar</Font><Font size="10">: Number of unconstrained variables. (Degrees of Freedom (d.o.f.) = <Font italic="true">NumBins</Font> - <Font italic="true">Nvar</Font>).</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">RandSeed</Font><Font size="10">: the seed to use when generating random numbers. It can be set to either an integer or to `random`.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">AdditionalError</Font><Font size="10">: sometimes the chi^2 of a fit is so large that the significance, alpha, is so small that it cannot be computed to the digits of precision in the program (currently Digits=50). This means that we have grosely underestimated the real error of the data, and must add some additional systematic error. This parameter allows the user to add some error (in units of  K), which will add in quadrature to the previously calculated error of the data.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">MCMC_TREND:=proc(Path,File,Pixel,BadBins,CParam,FParam,SParam,OParam,HParam,N,BadN,sigma,r2,Nvar,RandSeed,AdditionalError)</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Define the local variables. These variables will only retain their definitions within the <Font italic="true">MCMCGridSPIFI</Font> procedure.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">local 
i, j, k, 
CMin, CMax, dC, C0, Cmean, Csigma, Cgrid, Cfit,
FMin, FMax, dF, F0, Fmean, Fsigma, Fgrid, Ffit,
SMin, SMax, dS, S0, Smean, Ssigma, Sgrid, Sfit,
OMin, OMax, dO, O0, Omean, Osigma, Ogrid, Ofit,
HMin, HMax, dH, H0, Hmean, Hsigma, Hgrid, Hfit,
ErrorArray, Flatfield, Gain, Efficiency, VelocityShift, HOFPIOffset, HOFPISlope,
XBadBins, YBadBins, 
Mins, Maxs, ds,
Mnew, Seed, Rand1, Rand2, r1, r, Naccept, AcceptRate, Nbestfit, 
M, L1, L2, chi1, chi2, chif, a, a1, a2, af, amax, Baseline,</Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">  SysErrorSqd, TotError, Signal, Noise, SNR, Intensity, Isigma:</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Define the global variables. These are variables that retain their definitions outside of the <Font italic="true">MCMCGridSPIFI</Font> procedure (including its sub-procedures).</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">global </Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">  X, Y, XBins, YBins, XScaled, YScaled, XFinal, YFinal, Lf, 
  graph1a, graph1b, graph2a, graph2b, graph3a, graph3b, graph3c,</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">  title1, title2, title3, title4, title5,
  AvgError, AvgErrorScaled, Transmission, NumBins, BinLength, BinLengthScaled, Histogram,</Font></Text-field><Text-field layout="Normal" style="Maple Input"><Font italic="false" underline="false">  Cpdf, Fpdf, Spdf, Opdf, Hpdf:</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Rename and reorganize the fitting parameters:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">CMin:=CParam[1]: CMax:=CParam[2]: dC:=CParam[3]: C0:=CParam[4]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">FMin:=FParam[1]: FMax:=FParam[2]: dF:=FParam[3]: F0:=FParam[4]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">SMin:=SParam[1]: SMax:=SParam[2]: dS:=SParam[3]: S0:=SParam[4]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">OMin:=OParam[1]: OMax:=OParam[2]: dO:=OParam[3]: O0:=OParam[4]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">HMin:=HParam[1]: HMax:=HParam[2]: dH:=HParam[3]: H0:=HParam[4]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Mins:=[CMin,FMin,SMin,OMin,HMin]: Maxs:=[CMax,FMax,SMax,OMax,HMax]: ds:=[dC,dF,dS,dO,dH]:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Specify the number of decimal places to carry through calculations.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Digits:=50: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">interface(displayprecision=20):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Read and display raw data</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Call and execute a sub-procedure, named <Font italic="true">readSPIFIdata,</Font> that reads SPIFI data from the *.spi file specified by the <Font italic="true">Path, Filename</Font>, and <Font italic="true">Pixel</Font> variables. *.spi files for SPIFI measurements of the TREND LO contain a 32x26 array of values. There is one row for each of the 32 bins (HOFPI positions) in the spectrum. The first column contains the x-axis values, the next 25 columns contain the y-values of each of the 25 pixels. This sub-procedure creates two global variables, X[i] and Y[i], each are 1D arrays with 32 values representing the X and Y coordinates of the 32 bins comprising the specified <Font italic="true">Pixel</Font>'s<Font italic="true"> </Font>spectrum.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">read("C://Documents and Settings/Tom Oberst/Desktop/SPIFI &amp; ZEUS/SPIFI observing plan July 2005/Maple Worksheets/SPIFI/read SPIFI data +X v2.mpl"): </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">readSPIFIdata_andX(Path, File, Pixel): X:=convert(X,list): Y:=convert(Y,list):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Define the average error for the TREND LO measurements. Because we do not coadd scans (the trend line shows up in our first scan), we do not have a standard deviation (over the coadd) as we do for long SPIFI integrations. Therefore, I define values here based on by-hand calculations of the RMS of the baselines of each pixel  (the first six and last six bins in the scan) in 200LO_scan8_FFT.spi:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">ErrorArray:=[0.364452489,1.926014625,1.063975561,0.623923749,0.53178469,0.270370022,10.05585853,2.812945868,1.957531705,0.820739381,0.221107585,0.489243812,0.667572189,0.518265738,1.112308247,1.007240923,2.015210607,0.534356329,2.264868915,1.503586806,1.057749241,9.592102991,0.997789014,1.173887817,0.525737709]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">AvgError:=ErrorArray[Pixel]:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Define the transmission. Since we don't go through the atmosphere for TREND LO measurements, we take this as 100%:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Transmission:=100:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Call a sub-procedure, named <Font italic="true">HistDiscont</Font>, that creates histogram-style displays of data. The suffix "Discont" refers to the fact that it can create histograms of discontinuous data sets (i.e. where bins have been removed).</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">read("C://Documents and Settings/Tom Oberst/Desktop/SPIFI &amp; ZEUS/SPIFI observing plan July 2005/Maple Worksheets/SPIFI/SPIFI histogram discontinuous v4.mpl"):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Create a graph of raw data:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">graph1a:=pointplot({seq([X[k],Y[k]], k=1..nops(X))}):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">HistDiscont(X,Y): graph1b:=Histogram: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">title1:=cat(File,", pixel ",Pixel,", raw TREND LO data"):
</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Scale data and display scaled data</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Y-scaling factors (flatfielding, gain, efficiency, and transmission) &amp; X-scaling factors (velocity shift, HOFPI offset, HOFPI slope):</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Define the (multiplicative) flatfield array, normalized to pixel 8:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Flatfield:=[2.5, 1.13, 0.9382, 1.884, 1.731, 2.695, -16.52, 1, 2.482, 1.320, 2.577, 2.298, 2.603, 2.772, 1.096, 1.220, 2.184, 1.603, 1.249, 1.934, 0.7632, 11, 0.9508, 2.265, 2.611]:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Define the gain, based on hot &amp; cold loads in telescope beam tube (mV/K):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Gain:=5.86:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Define the (telescope and beam-coupling) efficiency. Since we pick up the TREND LO power in the same place that we held our hot and cold loads, we take this as 100%:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Efficiency:=1:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Define the (additive) velocity shift array. Because this is one of the things we are determining by fitting the TREND LO lines, we set this equal to 0 here:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">VelocityShift:=0:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Define the conversion factors from HOFPI counts to km/s (the offset is in [counts], the slope is in [km/s per count]). Again, we are determining these here, so we set them to zero and unity, respectively:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">HOFPIOffset:=0: HOFPISlope:=1:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Remove bins:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">NumBins:=nops(X)-nops(BadBins): BinLength:=(X[1]-X[nops(X)])/(nops(X)-1):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to nops(BadBins) do XBadBins[BadBins[i]]:=DEL: YBadBins[BadBins[i]]:=DEL: end do: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">j:=1:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to nops(X) do </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">if XBadBins[i]&lt;&gt;DEL then XBins[j]:=X[i]: YBins[j]:=Y[i]: j:=j+1: end if: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">end do:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Scale Data:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to NumBins do</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">YScaled[i]:=Flatfield[Pixel]*(1/Gain)*(1/Efficiency)*(100/Transmission)*YBins[i]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">XScaled[i]:=XBins[i]: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">end do:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">AvgErrorScaled:=sqrt(AdditionalError^2+(Flatfield[Pixel]*(1/Gain)*(1/Efficiency)*(100/Transmission)*AvgError)^2):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">BinLengthScaled:=BinLength: </Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Create a graph of the scaled data:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">graph2a:=pointplot({seq([XScaled[k],YScaled[k]], k=1..NumBins)}):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">HistDiscont(convert(XScaled,list),convert(YScaled,list)): graph2b:=Histogram: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">title2:=cat(File,", pixel ",Pixel,", scaled TREND LO data"):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Output "header"</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">Fitting program:
File
Pixel
Bins Removed; "BadBins"
HOFPI offset (counts)
HOFPI slope (km/s per count)
Velocity offset (counts)
Gain
Flatfielding
Efficiency (fraction)
Transmission (%)
Centroid Min (counts)
Centroid Max (counts)
Centroid s (counts)
Centroid0 (counts)
FWHM Min (counts)
FWHM Max (counts)
FWHM s (counts)
FWHM0 (counts)
Height Min (K)
Height Max (K)
Height s (K)
Height0 (K)
Slope Min (K/counts)
Slope Max (K/counts)
Slope s (K/counts)
Slope0 (K/counts)
Offset Min (K)
Offset Max (K)
Offset s (K)
Offset0 (K)
MCMC steps; "N"
MCMC initial steps to throw out; "BadN"
s of MCMC random gaussian
acceptance aggression; "r2"
unconstrained variables; "Nvar"
additional error; "AdditionalError" (K)
</Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(File):
print(Pixel):
print(BadBins):
print(HOFPIOffset):
print(HOFPISlope):
print(VelocityShift):
print(Gain):
print(Flatfield[Pixel]):
print(Efficiency):
print(Transmission):
print(CMin):
print(CMax):
print(dC):
print(C0):
print(FMin):
print(FMax):
print(dF):
print(F0):
print(HMin):
print(HMax):
print(dH):
print(H0):
print(SMin):
print(SMax):
print(dS):
print(S0):
print(OMin):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(OMax):
print(dO):
print(O0):
print(N):
print(BadN):
print(sigma):
print(r2):
print(Nvar):  </Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(AdditionalError):</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">*************************************</Text-field><Text-field layout="Normal" style="Text">Markov Chain Monte Carlo</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Calculate the figures of merit for the first point in the Markov Chain, M<Font subscript="true" superscript="false">0:</Font></Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">M[0]:=[C0,F0,S0,O0,H0]:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Lorentzian (the baseline has a funny form so that the offset occurs at the emission line center, not at x=0):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">L1:=unapply(H0/(1+((x-C0)/(F0/2))^2)+(S0*(x-sum(XScaled[k],k=1..NumBins)/NumBins)+O0), x):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Chi squared:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">chi1:=sum((L1(XScaled[k])-YScaled[k])^2, k=1..NumBins)/(AvgErrorScaled^2):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Alpha ("confidence" or "significance level"):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">a1:=1-statevalf[cdf,chisquare[NumBins-Nvar]](chi1):</Font></Text-field><Text-field layout="Normal" style="Text"><Font size="10">The following variables need initialized before starting the Markov Chain. Naccept is a tally of the number of times a proposed point Mnew is accepted, a is an array of the confidences of each point visited in the Markov Chain, Nbestfit is the position (i.e. iteration number) of the maximum value in a, Mnew is the first proposed step in the MCMC, and Seed is used to generate random numbers based on a user-supplied integer or your computer's clock:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Naccept:=0: a[0]:=a1: Nbestfit:=0: Mnew:=[C0,F0,S0,O0,H0]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">if type(RandSeed, integer)=true then Seed:=randomize(RandSeed): else Seed:=randomize(): end if:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Do the Markov Chain loop:</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to N do</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Generate a new proposed point, Mnew:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Rand1:=[random[normald[0,sigma]](5)]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for j from 1 to 5 do Mnew[j]:=M[i-1][j]+ds[j]*Rand1[j]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">if Mnew[j]&gt;Maxs[j] then Mnew[j]:=Maxs[j]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">elif Mnew[j]&lt;Mins[j] then Mnew[j]:=Mins[j]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">end if: end do:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Calculate the figures of merit for the propsed point, Mnew:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">L2:=unapply(Mnew[5]/(1+((x-Mnew[1])/(Mnew[2]/2))^2)+(Mnew[3]*(x-sum(XScaled[k],k=1..NumBins)/NumBins)+Mnew[4]), x):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">chi2:=sum((L2(XScaled[k])-YScaled[k])^2, k=1..NumBins)/(AvgErrorScaled^2):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">a2:=1-statevalf[cdf,chisquare[NumBins-Nvar]](chi2):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Compare Mnew with the last point in the Markov Chain, M[i-1], and decide whether to accept or reject it:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">r1:=a2/a1: r:=r1*r2:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Rand2:=evalf(rand(0..1000)()/1000): </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">if Rand2 &lt;= r then   </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">M[i]:=Mnew:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">a[i]:=a2:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">if a[i]&gt;max(seq(a[k],k=0..i-1)) then Nbestfit:=i end if:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">a1:=a2:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Naccept:=Naccept+1: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">else M[i]:=M[i-1]: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">a[i]:=a1:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">end if:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">end do:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Calculate the acceptance rate of your MCMC. This can be adjusted using r2. Emprical data suggests aiming for <Font italic="true">AcceptRate</Font> ~ 25% for data with  &gt;2 d.o.f. (Gregory 2005) .</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">AcceptRate:=100*evalf(Naccept/N): </Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Calculate parameter pdf's, means, and sigmas:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Cpdf:=histogram([seq(M[i][1], i=BadN..N)], area=N):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Cmean:=describe[mean]([seq(M[i][1], i=BadN..N)]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Csigma:=describe[standarddeviation]([seq(M[i][1], i=BadN..N)]):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Fpdf:=histogram([seq(M[i][2], i=BadN..N)], area=N):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Fmean:=evalf(describe[mean]([seq(M[i][2], i=BadN..N)])):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Fsigma:=describe[standarddeviation]([seq(M[i][2], i=BadN..N)]):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Spdf:=histogram([seq(M[i][3], i=BadN..N)], area=N):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Smean:=describe[mean]([seq(M[i][3], i=BadN..N)]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Ssigma:=describe[standarddeviation]([seq(M[i][3], i=BadN..N)]):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Opdf:=histogram([seq(M[i][4], i=BadN..N)], area=N):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Omean:=describe[mean]([seq(M[i][4], i=BadN..N)]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Osigma:=describe[standarddeviation]([seq(M[i][4], i=BadN..N)]):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Hpdf:=histogram([seq(M[i][5], i=BadN..N)], area=N):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Hmean:=describe[mean]([seq(M[i][5], i=BadN..N)]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Hsigma:=describe[standarddeviation]([seq(M[i][5], i=BadN..N)]):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Use the point in the MCMC with maximum alpha (<Font italic="true">Nbestfit</Font>) to do final fit</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Compute the baseline and subtract it from the data points. Note that the baseline is defined in such a way that the offet is the offset at the center of the spectrum, not at the y-axis (not at x=0):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Baseline:=unapply(M[Nbestfit][3]*(x-sum(XScaled[k],k=1..NumBins)/NumBins)+M[Nbestfit][4], x):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to NumBins do YFinal[i]:=YScaled[i]-Baseline(XScaled[i]): XFinal[i]:=XScaled[i]: end do:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Compute the Lorentzian (without the baseline):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Lf:=unapply(M[Nbestfit][5]/(1+((x-M[Nbestfit][1])/(M[Nbestfit][2]/2))^2), x):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">chif:=sum((Lf(XFinal[k])-YFinal[k])^2, k=1..NumBins)/(AvgErrorScaled^2):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">af:=1-statevalf[cdf,chisquare[NumBins-Nvar]](chif):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">If chi^2 is not equal to 1, then there is some systematic error that has been underestimated or overestimated. The total error (TotError) is the sum of the calculated error (AvgErrorScaled) and the systematic error (SysError):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">SysErrorSqd:=fsolve(sum((Lf(XFinal[k])-YFinal[k])^2, k=1..NumBins)/(AvgErrorScaled^2+x)/27=1,x):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">TotError:=sqrt(AvgErrorScaled^2+SysErrorSqd):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Signal:=evalf((Pi/2)*M[Nbestfit][5]*(M[Nbestfit][2]/BinLengthScaled)):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Noise:=evalf(sqrt((chif*TotError^2/(NumBins-Nvar))*((Pi/2)*M[Nbestfit][2]/BinLengthScaled))):<Font italic="false" size="10" underline="false"> </Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">SNR:=Signal/Noise:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Intensity:=Signal*BinLengthScaled:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Isigma:=Noise*BinLengthScaled:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">graph3a:=pointplot({seq([XFinal[k],YFinal[k]], k=1..NumBins)}):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">HistDiscont(convert(XFinal,list),convert(YFinal,list)): graph3b:=Histogram: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">graph3c:=plot(Lf(x), x=XFinal[NumBins]-BinLengthScaled/2..XFinal[1]+BinLengthScaled/2):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">title3:=cat(File,", pixel ",Pixel,`\n`,"MCMC chi^2 fit to Lorentzian"):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Print outputs</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">fitting method
random number generator seed; "Seed"
MCMC acceptance rate (%)
reduced chi^2
confidence; "alpha" (%)
Known Error "AvgErrorScaled" (K)
Unknown Error Squared "SysErrorSqd" (K^2)
Total Error "TotError" (K)
Signal (K*Nbins)
Noise (K*sqrt(Nbins))
SNR
Intensity (K*counts)
Intensity s (K*counts)
Centroid (counts)
Centroid s (counts)
FWHM (counts)
FWHM s (counts)
Height (K)
Height s (K)
Slope (K/counts)
Slope s (K/counts)
Offset (K)
Offset s (K)</Text-field><Text-field layout="Normal" style="Text">Final list of X values (counts)</Text-field><Text-field layout="Normal" style="Text">Final list of Y values (K)</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(`MCMC min fit`):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Seed):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(AcceptRate):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(chif/(NumBins-Nvar)):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(100*af):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(AvgErrorScaled):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(SysErrorSqd):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(TotError):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Signal):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Noise):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(SNR):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Intensity):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Isigma):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(M[Nbestfit][1]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Csigma):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(M[Nbestfit][2]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Fsigma):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(M[Nbestfit][5]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(AvgErrorScaled*sqrt(chif/(NumBins-Nvar))):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(M[Nbestfit][3]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Ssigma):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(M[Nbestfit][4]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Osigma):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to nops(X) do print(XFinal[i]) od:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to nops(X) do print(YFinal[i]) od:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field prompt="&gt; " style="Maple Input">end proc:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">MCMC_TREND("C:/Documents and Settings/Tom Oberst/Desktop/SPIFI &amp; ZEUS/SPIFI observing plan July 2005/Observing Data/Original Data Files/200LO/","200LO_scan9_FFT.spi",25,[],[27525,27650,1,27625],[0,80,3,30],[-0.1,0.1,0.0015,0.008],[0,80,0.25,40],[0,50,.25,11],1000,0,.8,1,5,random,.5):</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiNRNDIwMExPX3NjYW45X0ZGVC5zcGk2Ig==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiI0Q=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM3Ig==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiE=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiI=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiE=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIiQnZSEiIw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIiU2RSEiJA==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiI=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiJCsi</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiJkR2Iw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiJl13Iw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiI=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiJkR3Iw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiE=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIyEp</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiQ=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiI0k=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiE=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiI10=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIiNEISIj</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIzY=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkISIiRiQ=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIiIiISIi</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIiM6ISIl</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIiIpISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiE=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIyEp</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIiNEISIj</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiI1M=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiJSs1</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiE=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIiIpISIi</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiI=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiY=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIiImISIi</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiNJLU1DTUN+bWlufmZpdEc2Ig==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiK0Y9OCQ9Ig==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlMrKysrKysrKysrKysrKysrKysrKysrKytIISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNXXnlaWSpvRS5YVVlPVHNAR1N2OmszMGRSKiEjXQ==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlMrWD07K2p4Z1BcJCk9ayQzSlZ0WiM0IXlWI1FiISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlMvcFgjKSlcNGYuLkd1c1okPXhjQSo0JnAkRzpfJiEjXQ==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIVJjJGZwaj9yQF8yPGA6QGpHWidcLU5iSUIlPSEjXQ==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNueic0IWY2UGtncUAueFxNOmgqUnoyRCg0X2AhI10=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlMkem5LKXBDT2xIXmQtMUUiPlVAXndvVkBsLyQhI1o=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlMyTWBuRChwQ25uJlJtSzJZQiEpXCRSVjYmPkhEISNc</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlMkPUd2eFxwaihSJCkpZXJWKkdwNVAsZno9YS83ISNa</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlMnZU5sJ1Jcc0lmLTowN18jUSVHQ0l2dEcvJDQnISNa</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlM5bzFOXiVSXE1OInpLbDkjcC8nKnB5J0ctUmVdISNc</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlM6IT49Yy08JlF2Q1dxWVInNG4kZlZQZEZIaUYhI1g=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNFXSxISSxFOFIoeSNHR24zekpsPXlkZCUzOSchI10=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNhRicqSDlgIUcsRHR5Ol5sOndiX21TYSk+RUkhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNxTypII2VwYXlbLUNOK0g9YyVvJFJmLy8jKiplIyEjXA==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNEXkI5JCo9W1RTQC9FT0t0ZkE5KWZwPCF6IkciISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNteic0IWY2UGtncUAueFxNOmgqUnoyRCg0X2AhI10=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIVMoKikpXDMpUVdcJilvS0tjZTEkenMlKSoqeV55PGU2ISNf</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNyJlJEUFcxQDNZcHIzU0ctTkQ9elI3SS4/JiEjXw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNZXytneVYkKikqKilbU1UxdSRbc0InZTdRQHpvUSEjWw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNlPzo5PngoSCVROy1cMWNAdyQqWzRrSyplW3EkISNd</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrP2pGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrK2pGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrIUd3IyEiJA==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrZ2lGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrU2lGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrP2lGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrK2lGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrIT13IyEiJA==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrZ2hGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrU2hGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrP2hGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrK2hGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrITN3IyEiJA==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrZ2dGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrU2dGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrP2dGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrK2dGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrISlmRiEiJA==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrZ2ZGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrU2ZGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrP2ZGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrK2ZGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrISllRiEiJA==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrZ2VGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrU2VGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrP2VGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrK2VGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrIXl2IyEiJA==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrZ2RGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrU2RGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrP2RGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIikrK2RGISIk</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJkTkVGWTovZHBGeSQpM2J1O10oSDdKKEdgISopISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJQIkcxJFJFXUZ3NCNHQHF4bmY9aDgxKlxxJioqISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNvInBzXlUkNEskW1ZTMXBIaScpWzonZkBST0Q2ISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlN3P2M8SnpiWDNSLiJmIzMkXG50IlEzPDA3ajchI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNXL21tJylmdXZTWSpRM21aOScqPUd4Y1Jmc0kiISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNTcm83YnUkKlsiZjJaeFZMbVpYNGRBdkpwRiIhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlMvNS1II2VHeS5LRGQvS18qb1FzI1FnNDRBPSIhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNtPiEpeUIuWWVbV1BzNztWIykpRypwJkcxTko1IiEjWw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlNWTktna01zTScpUj0/cl5tKj5oNl1yZzVvKyIhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlInR19AVEUnb0UtJCk+W049LiVSWGdXJ1Etb3IqISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJzY1lxITNreSN6Qj9aVz1hJSpwQyF6S3RZayEqISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJDWjspKXpEaygqKipveiY9ayZ5U1s5Ml5gUitCKSEjWw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJnKVE+WCkpcEJVOTNeJjRgKnBEQz1aUjVYcnUhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJCRkZvNjVFNnRlN0UjPjkkXEVnJEd4L2UiKmYhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJRLWljNzUnPipwJD49VEtzaEJLL3UjPj5BNyYhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlIqSFspUm9MTFcoKikqNCVmLTczKFExLjg+NnUwJSEjWw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJ5OEhLJlsmcG5wUF8jPSFcVz49RHYtcTZMVSQhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJgcnEhWyYpUnVnNSdmVHojKioqeXRMZFJTJW9rRiEjWw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJpLEhPRkglbyUqZllhIWYlZjsyKzhIQHFqJlwjISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlInKikqZUFxPUBjM1x4Kik9LWp4L1ghKipSTiRlOyMhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlI7IVxyUFRcKjQzRyVIRHJZKXpOZFhSLl1VJD0hI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlIyYmY3XFBFSkFjLnErVzZGVi1IW3NdaSg9ISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlImcDlTcUxnKm8rcHhkIWYuYG9zQlU1J3ljayIhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlI+JFE4KjNbKlJPIXl5VU8hPTxvaS5dX3ZvVjohI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlInWypwXiRvLmwkb3E6VjxhNmpNQy1jSHkvXyIhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJ2Om40ZCdmQ3UlcEV2KD5XLD9sLCMzJipRLVoiISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJwQ2ZBYUI4eidwVXRQel13Jlw5cHRVeD9mIiEjWw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlJ5NipmOmo6IkhCLjIkKjQ2LkNsIlxcQGtZKGUiISNb</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlIqXChHKmZOSzAvcEgoW2RxT0pUIUdHM1xRaTohI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlInW3A+SXdcMDddelJNek9XKXpRVjU6QzJwIiEjWw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlIqW21RNiRwYnJjRVBYLigqXF4iR05AYVY7NDwhI1s=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIlIxKT5gTHF2KClbTi4pPjtxLidcLyY+KmVLbnk7ISNb</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">display(graph3a,{op(graph3b),graph3c,<Font size="10">plot(0, x=XFinal[1]+BinLengthScaled/2..XFinal[NumBins]-BinLengthScaled/2,color=black)</Font>}, axes=boxed, title=title3, <Font italic="false" size="10" underline="false">titlefont=[Times,14,bold], labels=["HOFPI Position (counts)","Main Beam Temperature (K)"], labelfont=[Arial,11,bold], font=[Arial,11,bold], labeldirections=[horizontal,vertical]</Font>);</Text-field></Input><Output><Text-field layout="Maple Plot"><Plot height="456" plot-scale="1.0" plot-xtrans="0.0" plot-ytrans="0.0" type="two-dimensional" width="508"></Plot></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">display(array([Cpdf,Fpdf,Hpdf,Spdf,Opdf]));</Text-field></Input><Output><Text-field layout="Maple Plot"><Plot height="170" plot-scale="1.0" plot-xtrans="0.0" plot-ytrans="0.0" type="two-dimensional" width="1080">LSUlUExPVEc2XG8tJSlQT0xZR09OU0c2LjcmNyQkIisrKysrISkhIikkISsrKysrNUYsNyRGKiQhK1RzXmwqKSEiKjckJCIrIz09PT0pRixGMDckRjRGLTcmRjY3JEY0JCErTjUkemonRjI3JCQiK2tqamokKUYsRjk3JEY8Ri03JkY+NyRGPCQhKyFRVHMsJEYyNyQkIitYWFhYJilGLEZBNyRGREYtNyZGRjckRkQkISsoKm8/J2UoRjI3JCQiK0ZGRkYoKUYsRkk3JEZMRi03JkZONyRGTCQhKygqbz8nMyZGMjckJCIrNDQ0NCopRixGUTckRlRGLTcmRlY3JEZUJCErKysrK3ZGMjckJCIrIjQ0NDQqRixGWTckRmZuRi03JkZobjckRmZuJCIiIUZcbzckJCIrc3NzcyMqRixGW283JEZeb0YtNyZGYG83JEZebyQiKmZGWyVHRiw3JCQiK2FhYWElKkYsRmNvNyRGZm9GLTcmRmhvNyRGZm8kIisrKysrNUYsNyQkIitPT09PJypGLEZbcDckRl5wRi03JkZgcDckRl5wJCIqKysrKyZGLDckJCIrPT09PSkqRixGY3A3JEZmcEYtNyZGaHA3JEZmcCQhKyFwPydlRkYyNyQkRlxwISIoRltxNyRGXnFGLS0lJkNPTE9SRzYmJSRSR0JHJCIxc0N5PyEzJz5xISM7RmVxJCIjNSEiIi0lJ0NVUlZFU0c2LTckNyQhIzVGaXE3JEZgckZgcjckRmFyNyRGaXFGYHI3JDckIiM/RmlxNyRGZnJGYHI3JEZncjckIiNTRmByNyQ3JCIjXUZpcTckRl1zRmByNyRGXnM3JCIjcUZgcjckNyQkIitbKnlqYylGLEZpcTckRmRzRmByNyQ3JEYqRmByNyQiJCsiRmByNyQ3JCIkNSJGaXE3JEZddEZgcjckRl50NyQiJEkiRmByLSUnTEVHRU5ERzYjUUJfX25ldmVyX2Rpc3BsYXlfdGhpc19sZWdlbmRfZW50cnk2Ii1GXHI2KDckNyQkISR2KiEiIyRGYHJGXG83JCQhJUQ1Rl11Rl51NyQ3JEZbdSQhKyNbOjwiZUYyNyRGYHVGZHU3JDckRlt1JCErazRWQjtGMjckRmB1Rml1NyQ3JEZbdSQiKmJgW2MjRiw3JEZgdUZedjckNyRGW3UkIioyUUp2J0YsNyRGYHVGY3ZGYnQtJSVURVhURzYlNyRGYHVGYHVRIzAuRmZ0JSpBTElHTkxFRlRHLUZndjYlNyRGYHUkISsjWzo8MSdGMlElLjVlMkZmdEZbdy1GZ3Y2JTckRmB1JCEyKysrUyc0VnQ9RmdxUSYuMTBlM0ZmdEZbdy1GZ3Y2JTckRmB1JCIqYmBbSiNGLFEmLjE1ZTNGZnRGW3ctRmd2NiU3JEZgdSQiKjJRSl0nRixRJi4yMGUzRmZ0Rlt3LUZccjYzNyQ3JCQiKz5yYXI/RixGW3U3JEZoeEZgdTckNyQkIitaaiVHUSNGLEZbdTckRl15RmB1NyQ3JCQiK3ZiOSVwI0YsRlt1NyRGYnlGYHU3JDckJCIrLltXMElGLEZbdTckRmd5RmB1NyQ3JCQiK0pTdTtMRixGW3U3JEZcekZgdTckNyQkIitnSy9HT0YsRlt1NyRGYXpGYHU3JDckJCIrKVtVJFJSRixGW3U3JEZmekZgdTckNyQkIiVEP0ZddUZedTckJCIldj5GXXVGXnU3JDckRltbbCQhK21tbTt3RjI3JEZeW2xGYltsNyQ3JEZbW2wkIStLTExMX0YyNyRGXltsRmdbbDckNyRGW1tsJCErKSoqKioqXEdGMjckRl5bbEZcXGw3JDckRltbbCQhKmttbW0lRjI3JEZeW2xGYVxsNyQ3JEZbW2wkIipubW0iPkYsNyRGXltsRmZcbDckNyRGW1tsJCIqKysrSSVGLDckRl5bbEZbXWw3JDckRltbbCQiKk1MTG8nRiw3JEZeW2xGYF1sNyQ3JEZbW2wkIipubW0xKkYsNyRGXltsRmVdbEZidC1GZ3Y2JTckJCIrPnJhWT9GLEZgdVEkMjQuRmZ0JStBTElHTkJFTE9XRy1GZ3Y2JTckJCIrWmoleU4jRixGYHVRJDI2LkZmdEZeXmwtRmd2NiU3JCQiK3ZiOXBFRixGYHVRJDI4LkZmdEZeXmwtRmd2NiU3JCQiKy5bVyEpSEYsRmB1USQzMC5GZnRGXl5sLUZndjYlNyQkIjIvKys1Llc8SCQhIzpGYHVRJDMyLkZmdEZeXmwtRmd2NiU3JCQiMisrKytFVklnJEZmX2xGYHVRJDM0LkZmdEZeXmwtRmd2NiU3JCQiKylbVVYiUkYsRmB1USQzNi5GZnRGXl5sLUZndjYlNyRGXltsRmB1Rmp2Rlt3LUZndjYlNyRGXltsJCErbW1tbXlGMlElLjJlMkZmdEZbdy1GZ3Y2JTckRl5bbCQhK0tMTCRbJkYyUSUuNGUyRmZ0Rlt3LUZndjYlNyRGXltsJCEyLysrISkqKioqKio0JEZncVElLjZlMkZmdEZbdy1GZ3Y2JTckRl5bbCQhKmttbTsoRjJRJS44ZTJGZnRGW3ctRmd2NiU3JEZeW2wkIjItKysrbm1tbSJGZ3FGZ3dGW3ctRmd2NiU3JEZeW2wkIiQwJUZddVEmLjEyZTNGZnRGW3ctRmd2NiU3JEZeW2wkIipNTExWJ0YsUSYuMTRlM0ZmdEZbdy1GZ3Y2JTckRl5bbCQiKm5tbSIpKUYsUSYuMTZlM0ZmdEZbdy1GXHI2MTckNyQkRl1zRlxvRlt1NyRGamNsRmB1NyQ3JCQiKy9bSlthRixGW3U3JEZeZGxGYHU3JDckJCIrMydIbSplRixGW3U3JEZjZGxGYHU3JDckJCIrN1clXE0nRixGW3U3JEZoZGxGYHU3JDckJCIrOyNmS3onRixGW3U3JEZdZWxGYHU3JDckJCIlRF1GXXVGXnU3JCQiJXZcRl11Rl51NyQ3JEZiZWwkISsrKys3eEYyNyRGZWVsRmllbDckNyRGYmVsJCErKysrQ2FGMjckRmVlbEZeZmw3JDckRmJlbCQhKysrK09KRjI3JEZlZWxGY2ZsNyQ3JEZiZWwkISopKioqKnolKUYyNyRGZWVsRmhmbDckNyRGYmVsJCIqKysrVyJGLDckRmVlbEZdZ2w3JDckRmJlbCQiKisrIUdQRiw3JEZlZWxGYmdsNyQ3JEZiZWwkIiorK2csJ0YsNyRGZWVsRmdnbDckNyRGYmVsJCIqKytTSSlGLDckRmVlbEZcaGxGYnQtRmd2NiU3JCQiMjMrKysrK10oXEZmX2xGYHVRJTExLjBGZnRGXl5sLUZndjYlNyQkIisvW0pCYUYsRmB1USUxMS41RmZ0Rl5ebC1GZ3Y2JTckJCIrMydIOyhlRixGYHVRJTEyLjBGZnRGXl5sLUZndjYlNyQkIjEtKys3VyUqPmohIzlGYHVRJTEyLjVGZnRGXl5sLUZndjYlNyQkIjEtKys7I2Yjb25GZmlsRmB1USUxMy4wRmZ0Rl5ebC1GZ3Y2JUZhaGxGanZGW3ctRmd2NiU3JEZiaGwkITErKysrKytpekZmX2xGXGFsRlt3LUZndjYlNyRGYmhsJCEldWMhIiRGYmFsRlt3LUZndjYlNyRGYmhsJCElJ1EkRmpqbEZoYWxGW3ctRmd2NiU3JEZiaGwkITItKyshKSoqKip6NCJGZ3FGXmJsRlt3LUZndjYlNyRGYmhsJCIkPiJGXXVGZ3dGW3ctRmd2NiU3JEZiaGwkIiV5TUZqamxGaWJsRlt3LUZndjYlNyRGYmhsJCIlbWRGampsRl9jbEZbdy1GZ3Y2JTckRmJobCQiJWEhKUZqamxGZWNsRlt3LUZccjYtNyQ3JCQiKzhkeD4iKUYsRlt1NyRGXV1tRmB1NyQ3JEZkc0ZbdTckRmRzRmB1NyQ3JCQiKyU9IylILCpGLEZbdTckRmVdbUZgdTckNyQkIis+YWVmJSpGLEZbdTckRmpdbUZgdTckNyQkIithJyk9MSoqRixGW3U3JEZfXm1GYHU3JDckJCIrWyp5OGYpRixGXnU3JCQiK1sqeThhKUYsRl51NyQ3JEZkXm0kIStHW00mbyZGMjckRmdebUZbX203JDckRmRebSQhK2MnKm9xOEYyNyRGZ15tRmBfbTckNyRGZF5tJCIqX2xSJUhGLDckRmdebUZlX203JDckRmRebSQiKnA/J2VzRiw3JEZnXm1Gal9tRmJ0LUZndjYlNyQkIis4ZHglNClGLEZgdVEnLS41ZS0yRmZ0Rl5ebC1GZ3Y2JTckRmdebUZgdUZqdkZeXmwtRmd2NiU3JCQiMS0rKyU9Iyl6KSopRmZpbEZgdVEmLjVlLTJGZnRGXl5sLUZndjYlNyQkIis+YWVNJSpGLEZgdVEnLjEwZS0xRmZ0Rl5ebC1GZ3Y2JTckJCIrYScpPSIpKSpGLEZgdVEnLjE1ZS0xRmZ0Rl5ebC1GZ3Y2JUZlYG1GanZGW3ctRmd2NiU3JEZnXm0kITErKytHW01OZkZmX2xGYXdGW3ctRmd2NiU3JEZnXm0kITItKytnbCpvPztGZ3FGZ3dGW3ctRmd2NiU3JEZnXm0kIipfbFJwI0YsRl14Rlt3LUZndjYlNyRGZ15tJCIqcD8nM3FGLEZjeEZbdy1GXHI2KjckNyQkIisrKysrOEZfcUZbdTckRmJjbUZgdTckNyQkIiZENSJGXXVGXnU3JCQiJnY0IkZddUZedTckNyRGZ2NtJCErbSRlXTUnRjI3JEZqY21GXmRtNyQ3JEZnY20kIStJbjY1QUYyNyRGamNtRmNkbTckNyRGZ2NtJCIqIVwjW28iRiw3JEZqY21GaGRtNyQ3JEZnY20kIiphbSh6YkYsNyRGamNtRl1lbTckNyRGZ2NtJCIqPDNaWipGLDckRmpjbUZiZW1GYnQtRmd2NiU3JCQiJnZIIkZddUZgdUZiYWxGXl5sLUZndjYlNyRGamNtRmB1Rmp2Rlt3LUZndjYlNyRGamNtJCExKysrbSRlXU4nRmZfbEZhd0Zbdy1GZ3Y2JTckRmpjbSQhKnQ7LFkjRixGZ3dGW3ctRmd2NiU3JEZqY20kIilcI1tWIkZfcUZdeEZbdy1GZ3Y2JTckRmpjbSQiMjMrKythbShIYEZncUZjeEZbdy1GZ3Y2JTckRmpjbSQiKjwzWkEqRixRJi4yNWUzRmZ0Rlt3LUYmNi43JjckJCIrKysrKzZGX3FGLTckRltobSQhK3Ipb1I5KkYyNyQkIis9PT09NkZfcUZeaG03JEZhaG1GLTcmRmNobTckRmFobSQhK0Nbb0spKUYyNyQkIitPT09PNkZfcUZmaG03JEZpaG1GLTcmRltpbTckRmlobSQhKyNSMkwmZkYyNyQkIithYWFhNkZfcUZeaW03JEZhaW1GLTcmRmNpbTckRmFpbSQhK3NQekc9RjI3JCQiK3Nzc3M2Rl9xRmZpbTckRmlpbUYtNyZGW2ptNyRGaWltJCIpZmRPZUYsNyQkIishNDQ0PiJGX3FGXmptNyRGYWptRi03JkZjam03JEZham0kIioyPlZ4JEYsNyQkIiszNDQ0N0ZfcUZmam03JEZpam1GLTcmRltbbjckRmlqbUZbcDckJCIrRkZGRjdGX3FGW3A3JEZfW25GLTcmRmFbbjckRl9bbiQiKicqSFIyJEYsNyQkIitYWFhYN0ZfcUZkW243JEZnW25GLTcmRmlbbjckRmdbbiQhK29EaT9yRjI3JCQiK2pqamo3Rl9xRlxcbjckRl9cbkYtNyZGYVxuNyRGX1xuJCErJm9LKSkqeUYyNyQkIisjPT09RyJGX3FGZFxuNyRGZ1xuRi03JkZpXG43JEZnXG4kISs4USdbdilGMjckRmJjbUZcXW43JEZiY21GLUZhcS1GJjYuNyY3JCQiKyoqKioqKioqPkYsRi03JEZkXW4kISswPncvJSpGMjckJCIrIj09PT0jRixGZ11uNyRGal1uRi03JkZcXm43JEZqXW4kISspKioqKioqXCNGMjckJCIrampqakJGLEZfXm43JEZiXm5GLTcmRmRebjckRmJebiQiKiNRXzRqRiw3JCQiK1ZYWFhERixGZ15uNyRGal5uRi03JkZcX243JEZqXm4kIiooRzlkeUYsNyQkIitFRkZGRkYsRl9fbjckRmJfbkYtNyZGZF9uNyRGYl9uJCIqVnImRyopRiw3JCQiKzM0NDRIRixGZ19uNyRGal9uRi03JkZcYG43JEZqX25GW3A3JCQiKyE0NDQ0JEYsRltwNyRGYGBuRi03JkZiYG43JEZgYG4kIipvbW1tJ0YsNyQkIitzc3NzS0YsRmVgbjckRmhgbkYtNyZGamBuNyRGaGBuJCErYkc5ZEdGMjckJCIrX2FhYU1GLEZdYW43JEZgYW5GLTcmRmJhbjckRmBhbiQhKzNRXzRRRjI3JCQiK05PT09PRixGZWFuNyRGaGFuRi03JkZqYW43JEZoYW4kIStsbW1tVEYyNyQkIis8PT09UUYsRl1ibjckRmBibkYtNyZGYmJuNyRGYGJuJCErZEc5ZHlGMjckJCIrKioqKioqKipSRixGZWJuNyRGaGJuRi1GYXEtRiY2LjcmNyQkIScrKzUhIiVGLTckRl9jbiQhKzNRSnYhKUYyNyQkISY9PSlGYWNuRmNjbjckRmZjbkYtNyZGaGNuNyRGZmNuJCErIUhIcSlHRjI3JCQhJk9PJ0ZhY25GW2RuNyRGXmRuRi03JkZgZG43JEZeZG4kIipYcDFjJUYsNyQkISZhYSVGYWNuRmNkbjckRmZkbkYtNyZGaGRuNyRGZmRuJCIqZSoqZSJlRiw3JCQhJnNzI0ZhY25GW2VuNyRGXmVuRi03JkZgZW43JEZeZW5GW3A3JCQhJSE0KkZhY25GW3A3JEZkZW5GLTcmRmZlbjckRmRlbiQiKk0uR1okRiw3JCQiJSI0KkZhY25GaWVuNyRGXGZuRi03JkZeZm43JEZcZm4kISt0JFxRcyRGMjckJCImdHMjRmFjbkZhZm43JEZkZm5GLTcmRmZmbjckRmRmbiQhK21QIXBsKEYyNyQkIiZiYSVGYWNuRmlmbjckRlxnbkYtNyZGXmduNyRGXGduJCErRHluVSMpRjI3JCQiJlBPJ0ZhY25GYWduNyRGZGduRi03JkZmZ25GZmduNyQkIiY9PSlGYWNuRi1GaGduNyZGaGduNyRGaWduJCErXXohelwqRjI3JCQiJysrNUZhY25GXWhuNyRGYGhuRi1GYXEtRiY2LjcmNyQkIisnKioqKioqKlxGLCQhKyoqKioqKioqKipGMjckRmdobiQhKzhkRzkkKkYyNyQkIio9PT09JkZfcUZcaW43JEZfaW5GaWhuNyZGYWluNyRGX2luJCErcSZHOWQnRjI3JCQiKk9PT08mRl9xRmRpbjckRmdpbkZpaG43JkZpaW43JEZnaW4kIisiSDlkKT1GMjckJCIqYWFhYSZGX3FGXGpuNyRGX2puRmlobjcmRmFqbjckRl9qbiQiK1RyJkd1KUYyNyQkIipzc3NzJkZfcUZkam43JEZnam5GaWhuNyZGaWpuNyRGZ2puJCIraEc5ZFtGMjckJCIqIjQ0NGZGX3FGXFtvNyRGX1tvRmlobjcmRmFbbzckRl9bbyQiK0BkRzlIRjI3JCQiKjM0NDQnRl9xRmRbbzckRmdbb0ZpaG43JkZpW283JEZnW29GW3A3JCQiKkZGRkYnRl9xRltwNyRGXVxvRmlobjcmRl9cbzckRl1cbyQhKyoqKioqKio+IkYyNyQkIipYWFhYJ0ZfcUZiXG83JEZlXG9GaWhuNyZGZ1xvNyRGZVxvJCErRjlkRzlGMjckJCIqampqaidGX3FGalxvNyRGXV1vRmlobjcmRl9dbzckRl1dbyQiKywrKys3RjI3JCQiKiI9PT1vRl9xRmJdbzckRmVdb0ZpaG43JkZnXW83JEZlXW8kISsmRzlkbydGMjckJCIqKysrKyhGX3FGal1vNyRGXV5vRmlobkZhcS0lKkFYRVNTVFlMRUc2IyUlTk9ORUc=</Plot></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">display({graph2a,op(graph2b)},view=[XScaled[NumBins]-<Font size="10">BinLengthScaled/2</Font>..XScaled[1]<Font size="10">+BinLengthScaled/2</Font>,(min(op(convert(YScaled,list)))-0.05*(max(op(convert(YScaled,list)))-min(op(convert(YScaled,list)))))..(max(op(convert(YScaled,list)))+0.05*(max(op(convert(YScaled,list)))-min(op(convert(YScaled,list)))))],axes=boxed,<Font italic="false" size="10" underline="false">title=title2, titlefont=[Times,16,bold], labels=["HOFPI Position (counts)","Main Beam Temperature (K)"], labelfont=[Arial,11,bold], font=[Arial,11,bold], labeldirections=[horizontal,vertical]</Font>);</Text-field></Input><Output><Text-field layout="Maple Plot"><Plot height="421" plot-scale="1.0" plot-xtrans="0.0" plot-ytrans="0.0" type="two-dimensional" width="452">LSUlUExPVEc2YW8tJSdDVVJWRVNHNiM3JDckJCJTKysrKysrKysrKysrKysrKysrKysrKzVlRiEjWCQiU2piNC87QG1Vdi50LVdaeGgkZWBeVjBLLy4lISNbNyQkIlMrKysrKysrKysrKysrKysrKysrKysrIXp2I0YsRi0tRiY2IzckNyQkIlMrKysrKysrKysrKysrKysrKysrKysrSWlGRiwkIlNSWD5eXWtGJEdwSFQuSSU9QSZ6PiUqb3IiSFZeRi83JCQiUysrKysrKysrKysrKysrKysrKysrKys1aUZGLEY5LUYmNiM3JDckJCJTKysrKysrKysrKysrKysrKysrKysrK11mRkYsJCJTZScqcDp5Wj8hZTVMcig9bDg/UCgpMz1IXCQqPVRGLzckRkIkIlMjNGgoKik0Wk1WaFM8JCpSSmMmNC87QG1AJz0nMyVGLy1GJjYjNyQ3JCQiUysrKysrKysrKysrKysrKysrKysrKytJZ0ZGLCQiUydwc2ZERCNRO2slWzE8XUA0aCgqKTRaUnVUdVVGLzckJCJTKysrKysrKysrKysrKysrKysrKysrKzVnRkYsRk8tRiY2IzckNyQkIlMrKysrKysrKysrKysrKysrKysrKysrcWhGRiwkIlNrRiRHcEhULkklPUEmej4lKm8nRzdbailIZSpwXEYvNyRGWCQiU1RnNmlFYVBJRlN1dTxPZWBeJEgpXHlhJ1EoW0YvLSUnUE9JTlRTRzZCNyQkIikrZ2dGISIkJCJTP1AoKTM9end2WSJcI1JYPl5da0YkR3A0cnRZJUYvNyQkIikrU2dGRl9vJCJTTkgpXHkhKlEtLEhibSZRZiNvKydvVi8vbW0hUSVGLzckJCIpKz9qRkZfbyQiU2RDJ3BzZkREI1E7ayVbMTxdQDRoKCopZll0YlpGLzckJCIpKytqRkZfbyQiU1AoKTM9end2WSJcI1JYPl5da0YkR3BIVFE2J1tGLzckJCIpKyFHdyNGX28kIlNuOVwjUlg+Xl1rRiRHcEhULkklPUEmeipHNSpcRi83JCQiKStnaUZGX28kIlN2Z2EhKVtcTnM7Mi4oZScqcDp5Wj8hZTVzLEheRi83JCQiKStTaUZGX28kIlNWaFM8JCpSSmMmNC87QG1Vdi50LVdacyhRdF5GLzckJCIpKz9pRkZfb0Y5NyQkIikrK2lGRl9vJCJTLSxIYm0mUWYjbysnb1YvZlIpeUxkQydwKylbXUYvNyQkIikrIT13I0Zfb0ZaNyQkIikrZ2hGRl9vRmduNyQkIikrU2hGRl9vJCJTJVsxPF1ANGgoKik0Wk1WaFM8JCpSSmNYbicqUVtGLzckJCIpKz9oRkZfbyQiU3E6eVo/IWU1THIoPWw4P1AoKTM9end2WydSeCVGLzckJCIpKytoRkZfbyQiU0BCQ2AzdmdhISlbXE5zOzIuKGUnKnA6dGAycCVGLzckJCIpKyEzdyNGX28kIlNkInlaPyFlNUxyKD1sOD9QKCkzPXp3dl5FXmglRi83JCQiKSs/Z0ZGX29GTzckJCIpKytnRkZfbyQiU3V1PE9lYF4kSClceSEqUS0sSGJtJlFmN1I3QCVGLzckJCIpKyEpZkZGX28kIlNcXE5zOzIuKGUnKnA6eVo/IWU1THIoPS4zYzklRi83JCQiKStnZkZGX29GRDckJCIpK1NmRkZfb0ZHNyQkIikrP2ZGRl9vJCJTNj4zS1VLJjN2Z2EhKVtcTnM7Mi4oZSwmZkswJUYvNyQkIikrK2ZGRl9vJCJTLSxIYm0mUWYjbysnb1YvZlIpeUxkQzE3cGRTRi83JCQiKSshKWVGRl9vJCJTISo0Wk1WaFM8JCpSSmMmNC87QG1Vdi5qbFsuJUYvNyQkIikrZ2VGRl9vJCJTOWpiNC87QG1Vdi50LVdaeGgkZWAsOykqWy0lRi83JCQiKStTZUZGX28kIlMiPXp3dlkiXCNSWD5eXWtGJEdwSFQucSkzRy0lRi83JCQiKSs/ZUZGX28kIlNwSFQuSSU9QSZ6PiUqbydHN1tqKXppN3JsLD1TRi83JCQiKSsrZUZGX29GLTckJCIpKyF5diNGX28kIlNzZkREI1E7ayVbMTxdQDRoKCopNFpNJCplLS0uJUYvNyQkIikrZ2RGRl9vJCJTJCpSSmMmNC87QG1Vdi50LVdaeGgkZXRnI3otJUYvNyQkIikrU2RGRl9vJCJTend2WSJcI1JYPl5da0YkR3BIVC5JTWoiKjQvJUYvNyQkIikrP2RGRl9vJCJTI1E7ayVbMTxdQDRoKCopNFpNVmhTPCQqR25JLyVGLzckJCIpKytkRkZfbyQiUypSSmMmNC87QG1Vdi50LVdaeGgkZWAiKVwtLyVGLy1GJjYjNyQ3JCQiUysrKysrKysrKysrKysrKysrKysrKytJakZGLEZqbzckJCJTKysrKysrKysrKysrKysrKysrKysrKzVqRkYsRmpvLUYmNiM3JDckRmZ4Rl9wNyQkIlMrKysrKysrKysrKysrKysrKysrKysrIUh3I0YsRl9wLUYmNiM3JDckJCJTKysrKysrKysrKysrKysrKysrKysrK11pRkYsRl5xNyRGN0ZecS1GJjYjNyQ3JCQiUysrKysrKysrKysrKysrKysrKysrKytxaUZGLEZpcDckRmN5RmlwLUYmNiM3JDckRl15RmRwNyRGanlGZHAtRiY2IzckNyRGPEZmcTckJCJTKysrKysrKysrKysrKysrKysrKysrKyE+dyNGLEZmcS1GJjYjNyQ3JEZnekZaRlctRiY2IzckRmZuNyQkIlMrKysrKysrKysrKysrKysrKysrKysrXWhGRixGZ24tRiY2IzckNyRGYVtsRmFyNyQkIlMrKysrKysrKysrKysrKysrKysrKysrSWhGRixGYXItRiY2IzckNyRGaFtsRmZyNyQkIlMrKysrKysrKysrKysrKysrKysrKysrNWhGRixGZnItRiY2IzckNyRGX1xsRltzNyQkIlMrKysrKysrKysrKysrKysrKysrKysrITR3I0YsRltzLUYmNiM3JDckRmZcbEZgczckJCJTKysrKysrKysrKysrKysrKysrKysrK3FnRkYsRmBzLUYmNiM3JDckRl1dbEZgbzckJCJTKysrKysrKysrKysrKysrKysrKysrK11nRkYsRmBvLUYmNiM3JDckRmRdbEZlbzckRk1GZW8tRiY2IzckNyRGUkZoczckJCJTKysrKysrKysrKysrKysrKysrKysrKyEqZkZGLEZocy1GJjYjNyQ3JEZgXmxGXXQ3JCQiUysrKysrKysrKysrKysrKysrKysrKytxZkZGLEZddC1GJjYjNyQ3JEZnXmxGREZBLUYmNiM3JEZGNyQkIlMrKysrKysrKysrKysrKysrKysrKysrSWZGRixGRy1GJjYjNyQ3JEZhX2xGaHQ3JCQiUysrKysrKysrKysrKysrKysrKysrKys1ZkZGLEZodC1GJjYjNyQ3JEZoX2xGXXU3JCQiUysrKysrKysrKysrKysrKysrKysrKyshKmVGRixGXXUtRiY2IzckNyRGX2BsRmJ1NyQkIlMrKysrKysrKysrKysrKysrKysrKysrcWVGRixGYnUtRiY2IzckNyRGZmBsRmd1NyQkIlMrKysrKysrKysrKysrKysrKysrKysrXWVGRixGZ3UtRiY2IzckNyRGXWFsRlx2NyQkIlMrKysrKysrKysrKysrKysrKysrKysrSWVGRixGXHYtRiY2IzckNyRGZGFsRmF2NyRGKkZhdi1GJjYjNyQ3JEYxRml2NyQkIlMrKysrKysrKysrKysrKysrKysrKysrcWRGRixGaXYtRiY2IzckNyRGYGJsRl53NyQkIlMrKysrKysrKysrKysrKysrKysrKysrXWRGRixGXnctRiY2IzckNyRGZ2JsRmN3NyQkIlMrKysrKysrKysrKysrKysrKysrKysrSWRGRixGY3ctRiY2IzckNyRGXmNsRmh3NyQkIlMrKysrKysrKysrKysrKysrKysrKysrNWRGRixGaHctRiY2IzckNyRGZWNsRl14NyQkIlMrKysrKysrKysrKysrKysrKysrKysrIXB2I0YsRl14LUYmNiM3JEZleEZbeS1GJjYjNyRGXHlGYHotRiY2IzckRmF6Rml5LUYmNiM3JEZcekZieS1GJjYjNyRGZXlGNi1GJjYjNyRGO0Zlei1GJjYjNyRGZnpGXFtsLUYmNiM3JEZgW2xGZltsLUYmNiM3JEZnW2xGXVxsLUYmNiM3JEZeXGxGZFxsLUYmNiM3JEZlXGxGW11sLUYmNiM3JEZcXWxGYl1sLUYmNiM3JEZjXWxGaV1sLUYmNiM3JEZqXWxGTC1GJjYjNyRGUUZeXmwtRiY2IzckRl9ebEZlXmwtRiY2IzckRmZebEZcX2wtRiY2IzckRmBfbEZmX2wtRiY2IzckRmdfbEZdYGwtRiY2IzckRl5gbEZkYGwtRiY2IzckRmVgbEZbYWwtRiY2IzckRlxhbEZiYWwtRiY2IzckRmNhbEZpYWwtRiY2IzckRmphbEYpLUYmNiM3JEYwRl5ibC1GJjYjNyRGX2JsRmVibC1GJjYjNyRGZmJsRlxjbC1GJjYjNyRGXWNsRmNjbC1GJjYjNyRGZGNsRmpjbC0lJlRJVExFRzYkUVQyMDBMT19zY2FuOV9GRlQuc3BpLH5waXhlbH4yNSx+c2NhbGVkflRSRU5EfkxPfmRhdGE2Ii1JJUZPTlRHRmlpbDYlSSZUaW1lc0dGaWlsIiM7SSVib2xkR0ZpaWwtJSpBWEVTU1RZTEVHNiMlJEJPWEctJStBWEVTTEFCRUxTRzYnUThIT0ZQSX5Qb3NpdGlvbn4oY291bnRzKUZpaWxROk1haW5+QmVhbX5UZW1wZXJhdHVyZX4oSylGaWlsLUZbamw2JUkmQXJpYWxHRmlpbCIjNkZfamwlK0hPUklaT05UQUxHJSlWRVJUSUNBTEctJSVWSUVXRzYkOyQiJnB2IyIiISQiMicqKioqKioqKioqSGpGISM3OyQiKzkhWy0nUiEiKSQiMS0rKyNHYzZCJiEjOUZpamw=</Plot></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">display({graph1a,op(graph1b)},view=[X[32]-BinLength/2..X[1]+BinLength/2,(min(op(convert(Y,list)))-0.05*(max(op(convert(Y,list)))-min(op(convert(Y,list)))))..(max(op(convert(Y,list)))+0.05*(max(op(convert(Y,list)))-min(op(convert(Y,list)))))],axes=boxed,<Font italic="false" size="10" underline="false">title=title1, titlefont=[Times,16,bold], labels=["HOFPI Position (counts)","Signal (mV)"], labelfont=[Arial,11,bold], font=[Arial,11,bold], labeldirections=[horizontal,vertical]</Font>);</Text-field></Input><Output><Text-field layout="Maple Plot"><Plot height="432" plot-scale="1.0" plot-xtrans="0.0" plot-ytrans="0.0" type="two-dimensional" width="458">LSUlUExPVEc2YW8tJSdDVVJWRVNHNiM3JDckJCJTKysrKysrKysrKysrKysrKysrKysrK0loRiEjWCQiKV9XcjUhIiY3JCQiUysrKysrKysrKysrKysrKysrKysrKys1aEZGLEYtLUYmNiM3JDckRiokIilSLiczIkYvRiktRiY2IzckNyQkIlMrKysrKysrKysrKysrKysrKysrKysrSWZGRiwkIilqJHA0KiEiJzckJCJTKysrKysrKysrKysrKysrKysrKysrKzVmRkYsRj8tRiY2IzckNyQkIlMrKysrKysrKysrKysrKysrKysrKysrXWhGRixGN0Y2LSUnUE9JTlRTRzZCNyQkIikrIT13IyEiJCQiKUlWOjZGLzckJCIpK1NoRkZRRjc3JCQiKSs/aEZGUUYtNyQkIikrK2hGRlEkIikocEYwIkYvNyQkIikrITN3I0ZRJCIpanpONUYvNyQkIikrZ2hGRlEkIilrJ1E0IkYvNyQkIikrU2ZGRlEkIilhJDM8KkZBNyQkIikrK2ZGRlEkIilFKW81KkZBNyQkIikrISllRkZRJCIpU2xiISpGQTckJCIpK2dlRkZRJCIpTkdMISpGQTckJCIpK1NlRkZRJCIpV2ZHISpGQTckJCIpKz9mRkZRRj83JCQiKSs/ZUZGUSQiKSlReSwqRkE3JCQiKSsheXYjRlEkIikmKT1YISpGQTckJCIpK2dkRkZRJCIpI3orLypGQTckJCIpK1NkRkZRJCIpSFNwISpGQTckJCIpKz9kRkZRJCIpOTF1ISpGQTckJCIpKytlRkZRJCIpTnFYISpGQTckJCIpK2dnRkZRJCIpW2otNUYvNyQkIikrP2dGRlEkIilCSCRmKkZBNyQkIikrK2dGRlEkIikhKVxeJSpGQTckJCIpKyEpZkZGUSQiKSkpPi8kKkZBNyQkIikrZ2ZGRlEkIildTFcjKkZBNyQkIikrU2dGRlEkIilGdkopKkZBNyQkIikrK2RGRlEkIikhUXgxKkZBNyQkIikrK2pGRlEkIikrLCI0IkYvNyQkIikrZ2lGRlEkIik5OF42Ri83JCQiKStTaUZGUSQiKSgqM2g2Ri83JCQiKSs/aUZGUSQiKV5MYTZGLzckJCIpKytpRkZRJCIpIUdKOCJGLzckJCIpKyFHdyNGUSQiKT87PzZGLzckJCIpKz9qRkZRJCIpUE5uNUYvLUYmNiM3JDckJCJTKysrKysrKysrKysrKysrKysrKysrK0lqRkYsRmF3NyQkIlMrKysrKysrKysrKysrKysrKysrKysrNWpGRixGYXctRiY2IzckNyRGandGY3U3JCQiUysrKysrKysrKysrKysrKysrKysrKyshSHcjRixGY3UtRiY2IzckNyRGYXhGXHc3JCQiUysrKysrKysrKysrKysrKysrKysrKytxaUZGLEZcdy1GJjYjNyQ3JEZoeEZodTckJCJTKysrKysrKysrKysrKysrKysrKysrK11pRkYsRmh1LUYmNiM3JDckRl95Rl12NyQkIlMrKysrKysrKysrKysrKysrKysrKysrSWlGRixGXXYtRiY2IzckNyRGZnlGYnY3JCQiUysrKysrKysrKysrKysrKysrKysrKys1aUZGLEZidi1GJjYjNyQ3JEZdekZndjckJCJTKysrKysrKysrKysrKysrKysrKysrKyE+dyNGLEZndi1GJjYjNyQ3JEZkekZSNyQkIlMrKysrKysrKysrKysrKysrKysrKysrcWhGRixGUi1GJjYjNyQ3JEZbW2xGYW83JEZJRmFvLUYmNiM3JDckRjFGZ243JCQiUysrKysrKysrKysrKysrKysrKysrKyshNHcjRixGZ24tRiY2IzckNyRGZ1tsRlxvNyQkIlMrKysrKysrKysrKysrKysrKysrKysrcWdGRixGXG8tRiY2IzckNyRGXlxsRmBzNyQkIlMrKysrKysrKysrKysrKysrKysrKysrXWdGRixGYHMtRiY2IzckNyRGZVxsRml0NyQkIlMrKysrKysrKysrKysrKysrKysrKysrSWdGRixGaXQtRiY2IzckNyRGXF1sRmVzNyQkIlMrKysrKysrKysrKysrKysrKysrKysrNWdGRixGZXMtRiY2IzckNyRGY11sRmpzNyQkIlMrKysrKysrKysrKysrKysrKysrKysrISpmRkYsRmpzLUYmNiM3JDckRmpdbEZfdDckJCJTKysrKysrKysrKysrKysrKysrKysrK3FmRkYsRl90LUYmNiM3JDckRmFebEZkdDckJCJTKysrKysrKysrKysrKysrKysrKysrK11mRkYsRmR0LUYmNiM3JDckRmhebEZmbzckRj1GZm8tRiY2IzckNyRGQ0ZbcDckJCJTKysrKysrKysrKysrKysrKysrKysrKyEqZUZGLEZbcC1GJjYjNyQ3JEZkX2xGYHA3JCQiUysrKysrKysrKysrKysrKysrKysrKytxZUZGLEZgcC1GJjYjNyQ3JEZbYGxGZXA3JCQiUysrKysrKysrKysrKysrKysrKysrKytdZUZGLEZlcC1GJjYjNyQ3JEZiYGxGanA3JCQiUysrKysrKysrKysrKysrKysrKysrKytJZUZGLEZqcC1GJjYjNyQ3JEZpYGxGYnE3JCQiUysrKysrKysrKysrKysrKysrKysrKys1ZUZGLEZicS1GJjYjNyQ3JEZgYWxGW3M3JCQiUysrKysrKysrKysrKysrKysrKysrKyshenYjRixGW3MtRiY2IzckNyRGZ2FsRmdxNyQkIlMrKysrKysrKysrKysrKysrKysrKysrcWRGRixGZ3EtRiY2IzckNyRGXmJsRlxyNyQkIlMrKysrKysrKysrKysrKysrKysrKysrXWRGRixGXHItRiY2IzckNyRGZWJsRmFyNyQkIlMrKysrKysrKysrKysrKysrKysrKysrSWRGRixGYXItRiY2IzckNyRGXGNsRmZyNyQkIlMrKysrKysrKysrKysrKysrKysrKysrNWRGRixGZnItRiY2IzckNyRGY2NsRl51NyQkIlMrKysrKysrKysrKysrKysrKysrKysrIXB2I0YsRl51LUYmNiM3JEZpd0ZfeC1GJjYjNyRGYHhGZngtRiY2IzckRmd4Rl15LUYmNiM3JEZeeUZkeS1GJjYjNyRGZXlGW3otRiY2IzckRlx6RmJ6LUYmNiM3JEZjekZpei1GJjYjNyRGanpGYFtsLUYmNiM3JEZhW2xGSC1GJjYjNyRGMEZlW2wtRiY2IzckRmZbbEZcXGwtRiY2IzckRl1cbEZjXGwtRiY2IzckRmRcbEZqXGwtRiY2IzckRltdbEZhXWwtRiY2IzckRmJdbEZoXWwtRiY2IzckRmldbEZfXmwtRiY2IzckRmBebEZmXmwtRiY2IzckRmdebEZdX2wtRiY2IzckRl5fbEY8LUYmNiM3JEZCRmJfbC1GJjYjNyRGY19sRmlfbC1GJjYjNyRGal9sRmBgbC1GJjYjNyRGYWBsRmdgbC1GJjYjNyRGaGBsRl5hbC1GJjYjNyRGX2FsRmVhbC1GJjYjNyRGZmFsRlxibC1GJjYjNyRGXWJsRmNibC1GJjYjNyRGZGJsRmpibC1GJjYjNyRGW2NsRmFjbC1GJjYjNyRGYmNsRmhjbC0lJlRJVExFRzYkUVEyMDBMT19zY2FuOV9GRlQuc3BpLH5waXhlbH4yNSx+cmF3flRSRU5EfkxPfmRhdGE2Ii1JJUZPTlRHRmppbDYlSSZUaW1lc0dGamlsIiM7SSVib2xkR0ZqaWwtJSpBWEVTU1RZTEVHNiMlJEJPWEctJStBWEVTTEFCRUxTRzYnUThIT0ZQSX5Qb3NpdGlvbn4oY291bnRzKUZqaWxRLFNpZ25hbH4obVYpRmppbC1GXGpsNiVJJkFyaWFsR0ZqaWwiIzZGYGpsJStIT1JJWk9OVEFMRyUpVkVSVElDQUxHLSUlVklFV0c2JDskIiZwdiMiIiEkIjInKioqKioqKioqKkhqRiEjNzskIioqZT0pKSkpISIoJCIrIipcMHU2Rl1cbUZqamw=</Plot></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/></Worksheet>