<?xml version="1.0" encoding="UTF-8"?>
<Worksheet><Version major="6" minor="1"/><View-Properties><Zoom percentage="100"/></View-Properties><Styles><Layout alignment="left" bullet="none" name="Warning"/><Layout alignment="left" bullet="none" firstindent="0.0" leftmargin="0.0" linebreak="space" linespacing="0.0" name="Normal" rightmargin="0.0" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="centred" bullet="none" name="Maple Plot"/><Layout alignment="left" bullet="none" linebreak="any" name="Line Printed Output"/><Font background="[0,0,0]" bold="true" executable="true" family="Monospaced" foreground="[255,0,0]" name="Maple Input" opaque="false" size="12"/><Font background="[0,0,0]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" name="Text" opaque="false" size="12" underline="false"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Warning" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Line Printed Output" opaque="false" readonly="true" size="12"/></Styles><Group><Input><Text-field layout="Normal" style="Text"><Font size="10">Restart the Maple server to clear old definitions, etc.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">restart:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Text"><Font size="10">Load the special Maple tools packages needed for operations within the <Font italic="true">MCMC_SPIFI</Font> procedure.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">with(plots): with(plottools): with(stats): with(statplots): with(StringTools): </Text-field></Input><Output><Text-field layout="Warning" style="Warning">Warning, the name changecoords has been redefined</Text-field></Output><Output><Text-field layout="Warning" style="Warning">Warning, the assigned name arrow now has a global binding</Text-field></Output><Output><Text-field layout="Warning" style="Warning">Warning, the previous binding of the name transform has been removed and it now has an assigned value</Text-field></Output><Output><Text-field layout="Warning" style="Warning">Warning, the assigned name Group now has a global binding</Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Initialize the procedure</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">The <Font italic="true">MCMC_SPIFI_manualXY</Font> procedure takes the following arguments:</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">Description</Font><Font size="10">: a string that will appear in the final spectrum title.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">X</Font><Font size="10">: data array of velocity values (in km/s).</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">Y</Font><Font size="10">: data array of main beam temperature values (in K).</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">RasterPosition</Font><Font size="10">: the raster position of the current data, in the form: (delta "row pixels", delta "column pixels").</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">BadBins</Font><Font size="10">: a list (enclosed in square brackets and separated by commas) of bins to be removed from the spectrum before the fit is attempted. If no bins are to be removed, an empty list must be entered: [ ].</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">CParam</Font><Font size="10">: a list of the minimum, maximum, step size, and initial value to use when fitting the Lorentzian centroid.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">FParam</Font><Font size="10">: a list of the minimum, maximum, step size, and initial value to use when fitting the Lorentzian FWHM.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">OParam</Font><Font size="10">: a list of the minimum, maximum, step size, and initial value to use when fitting the baseline offset. In this program, I have defined the baseline as y=m(x-average(x[i]))+b, such that the offset, b, is the offset at the center of the spectrum, not at x=0.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">SParam</Font><Font size="10">: a list of the minimum, maximum, step size, and initial value to use when fitting the baseline slope.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">HParam</Font><Font size="10">: a list of the minimum, maximum, step size, and initial value to use when fitting the Lorentzian height.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">N</Font><Font size="10">: total number of steps to attempt in your Markov Chain random walk.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">BadN</Font><Font size="10">: number of steps to throw out from the beginning of the Markov Chain (start-up iterations). This is only necessary if you choose an initial point far from the chi^2 minimum.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">sigma</Font><Font size="10">: a parameter that controls the size of proposed steps in the Markov Chain. More precisely, <Font italic="true">sigma</Font> is standard deviation of the random normal distribution which is used to determine the Markov step size.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">r2</Font><Font size="10">: a parameter that controls the acceptance rate of proposed steps in the Markov Chain. However, in principle the acceptance rate is best controlled with sigma: while increasing r2 can lower the standard for acceptance, lowering sigma can raise the actual number of points with good fits to the data, which is a much more desireable means of increasing the acceptance rate.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">Nvar</Font><Font size="10">: Number of unconstrained variables. (Degrees of Freedom (d.o.f.) = <Font italic="true">NumBins</Font> - <Font italic="true">Nvar</Font>).</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">RandSeed</Font><Font size="10">: the seed to use when generating random numbers. It can be set to either an integer or to `random`.</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="true" size="10">AdditionalError</Font><Font size="10">: sometimes the chi^2 of a fit is so large that the significance, alpha, is too small to be computed to the digits of precision in the program (currently Digits=50). This means that we have grosely underestimated the real error of the data, and must add some additional systematic error. This parameter allows the user to add some error (in units of  K), which will add in quadrature to the previously calculated error of the data.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">MCMC_SPIFI_manualXY:=proc(Description,RasterPosition,X,Y,AvgError,BadBins,CParam,FParam,SParam,OParam,HParam,N,BadN,sigma,r2,Nvar,RandSeed,AdditionalError)</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Define the local variables. These variables will only retain their definitions within the <Font italic="true">MCMCGridSPIFI</Font> procedure.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">local 
i, j, k, 
CMin, CMax, dC, C0, Cmean, Csigma, Cgrid, Cfit,
FMin, FMax, dF, F0, Fmean, Fsigma, Fgrid, Ffit,
SMin, SMax, dS, S0, Smean, Ssigma, Sgrid, Sfit,
OMin, OMax, dO, O0, Omean, Osigma, Ogrid, Ofit,
HMin, HMax, dH, H0, Hmean, Hsigma, Hgrid, Hfit,
XBadBins, YBadBins, 
Mins, Maxs, ds,
Mnew, Seed, Rand1, Rand2, r1, r, Naccept, AcceptRate, Nbestfit, pegged,
M, L1, L2, chi1, chi2, chif, a, a1, a2, af, amax, Baseline, 
SysErrorSqd, TotError,<Font italic="false" underline="false"> Signal, Noise, SNR, Intensity, Isigma:</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Define the global variables. These are variables that retain their definitions outside of the <Font italic="true">MCMCGridSPIFI</Font> procedure (including its sub-procedures).</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">global </Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">  XBins, YBins, XScaled, YScaled, XFinal, YFinal, Lf,
  graph1a, graph1b, graph2a, graph2b, graph3a, graph3b, graph3c,</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">  title1, title2, title3,
  AvgErrorScaled, NumBins, BinLength, BinLengthScaled, Histogram,</Font></Text-field><Text-field layout="Normal" style="Maple Input"><Font italic="false" underline="false">  Cpdf, Fpdf, Spdf, Opdf, Hpdf:</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Rename and reorganize the fitting parameters:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">CMin:=CParam[1]: CMax:=CParam[2]: dC:=CParam[3]: C0:=CParam[4]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">FMin:=FParam[1]: FMax:=FParam[2]: dF:=FParam[3]: F0:=FParam[4]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">SMin:=SParam[1]: SMax:=SParam[2]: dS:=SParam[3]: S0:=SParam[4]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">OMin:=OParam[1]: OMax:=OParam[2]: dO:=OParam[3]: O0:=OParam[4]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">HMin:=HParam[1]: HMax:=HParam[2]: dH:=HParam[3]: H0:=HParam[4]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Mins:=[CMin,FMin,SMin,OMin,HMin]: Maxs:=[CMax,FMax,SMax,OMax,HMax]: ds:=[dC,dF,dS,dO,dH]:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Specify the number of decimal places to carry through calculations.</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Digits:=50: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">interface(prettyprint=0): interface(displayprecision=20):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Read and display raw data</Text-field><Text-field layout="Normal" style="Text">**************************************<Font italic="false" style="Maple Input" underline="false">
 </Font></Text-field><Text-field layout="Normal" style="Text"><Font size="10">Call a sub-procedure, named <Font italic="true">HistDiscont</Font>, that creates histogram-style displays of data. The suffix "Discont" refers to the fact that it can create histograms of discontinuous data sets (i.e. where bins have been removed).</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">read("C://Documents and Settings/Tom Oberst/Desktop/SPIFI &amp; ZEUS/SPIFI observing plan July 2005/Maple Worksheets/SPIFI/SPIFI histogram discontinuous v6.mpl"):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">graph1a:=pointplot({seq([X[k],Y[k]], k=1..nops(X))}):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">HistDiscont(X,Y): graph1b:=Histogram: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">title1:=cat(`[NII] 205 micron scaled data`,`\n`,`, SPIFI Car II Raster Position `,RasterPosition):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Scale data and display scaled data</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Remove bins:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">NumBins:=nops(X)-nops(BadBins): BinLength:=(X[1]-X[nops(X)])/(nops(X)-1):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to nops(BadBins) do XBadBins[BadBins[i]]:=DEL: YBadBins[BadBins[i]]:=DEL: end do: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">j:=1:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to nops(X) do </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">if XBadBins[i]&lt;&gt;DEL then XBins[j]:=X[i]: YBins[j]:=Y[i]: j:=j+1: end if: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">end do:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Scale Data (because X and Y values are entered manually already in units of K and km/s, no scaling is necessary):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to NumBins do</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">YScaled[i]:=YBins[i]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">XScaled[i]:=XBins[i]: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">end do:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">AvgErrorScaled:=sqrt(AdditionalError^2+AvgError^2):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">BinLengthScaled:=BinLength:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Output "header"</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">User Inputs:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">Description
Raster Position</Text-field><Text-field layout="Normal" style="Text">X1 (km/s)</Text-field><Text-field layout="Normal" style="Text">Y1 (K)</Text-field><Text-field layout="Normal" style="Text">Avgerage Error "AvgError" (K)
Bins Removed; "BadBins"
Centroid Min (km/s)
Centroid Max (km/s)
Centroid s (km/s)
Centroid0 (km/s)
FWHM Min (km/s)
FWHM Max (km/s)
FWHM s (km/s)
FWHM0 (km/s)
Slope Min (K/km/s)
Slope Max (K/km/s)
Slope s (K/km/s)
Slope0 (K/km/s)
Offset Min (K)
Offset Max (K)
Offset s (K)
Offset0 (K)</Text-field><Text-field layout="Normal" style="Text">Height Min (K)
Height Max (K)
Height s (K)
Height0 (K)
MCMC steps; "N"
MCMC initial steps to throw out; "BadN"
sigma of MCMC random gaussian
acceptance aggression; "r2"
unconstrained variables; "Nvar"</Text-field><Text-field layout="Normal" style="Text">Random seed; "RandSeed"</Text-field><Text-field layout="Normal" style="Text">Additonal User Defined Error (K); "AdditionalError"</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">Read-in Data:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">Transmission (%)</Text-field><Text-field layout="Normal" style="Text">Antenna Velocity (km/s)</Text-field><Text-field layout="Normal" style="Text">Flatfielding</Text-field><Text-field layout="Normal" style="Text">Gain (mV/K)</Text-field><Text-field layout="Normal" style="Text">Efficiency (%)</Text-field><Text-field layout="Normal" style="Text">"Flat Velocity" (counts)</Text-field><Text-field layout="Normal" style="Text">HOFPI offset (counts)
HOFPI slope (km/s per count)
</Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(Description):
print(RasterPosition):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(X[1]):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(Y[1]):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(AvgError):
print(BadBins):
print(CMin):
print(CMax):
print(dC):
print(C0):
print(FMin):
print(FMax):
print(dF):
print(F0):
print(SMin):
print(SMax):
print(dS):
print(S0):
print(OMin):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(OMax):
print(dO):
print(O0):
print(HMin):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(HMax):
print(dH):
print(H0):
print(N):
print(BadN):
print(sigma):
print(r2):
print(Nvar):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(`see </Font><Font italic="true" style="Maple Input" underline="false">User Outputs</Font><Font italic="false" style="Maple Input" underline="false"> below`):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(AdditionalError):</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(Transmission):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(AntennaVelocity):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(Flatfield[Pixel]):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(Gain):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(Efficiency):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(FlatVelocity[Pixel]):</Font></Text-field><Text-field layout="Normal" style="Text"><Font italic="false" style="Maple Input" underline="false">print(HOFPIOffset):
print(HOFPISlope):</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Markov Chain Monte Carlo</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Calculate the figures of merit for the first point in the Markov Chain, M<Font subscript="true" superscript="false">0:</Font></Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">M[0]:=[C0,F0,S0,O0,H0]:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Lorentzian (the baseline is defined such that the offset occurs at the spectrum's center, not at x=0):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">L1:=unapply(H0/(1+((x-C0)/(F0/2))^2)+(S0*(x-sum(XScaled[k],k=1..NumBins)/NumBins)+O0), x):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Chi squared:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">chi1:=sum((L1(XScaled[k])-YScaled[k])^2, k=1..NumBins)/(AvgErrorScaled^2):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Alpha ("confidence" or "significance level"):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">a1:=1-statevalf[cdf,chisquare[NumBins-Nvar]](chi1):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">The following variables need initialized before starting the Markov Chain. Naccept is a tally of the number of times a proposed point Mnew is accepted, a is an array of the confidences of each point visited in the Markov Chain, Nbestfit is the position (i.e. iteration number) of the maximum value in a, Mnew is the first proposed step in the MCMC, and Seed is used to generate random numbers based on a user-supplied integer or your computer's clock:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Naccept:=0: a[0]:=a1: Nbestfit:=0: Mnew:=[C0,F0,S0,O0,H0]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">if type(RandSeed, integer)=true then Seed:=randomize(RandSeed): else Seed:=randomize(): end if:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Do the Markov Chain loop:</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to N do</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Generate a new proposed point, Mnew:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Rand1:=[random[normald[0,sigma]](5)]: pegged:=false:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for j from 1 to 5 do Mnew[j]:=M[i-1][j]+ds[j]*Rand1[j]:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">if Mnew[j]&gt;Maxs[j] then Mnew[j]:=Maxs[j]: pegged:=true:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">elif Mnew[j]&lt;Mins[j] then Mnew[j]:=Mins[j]: pegged:=true:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">end if: end do:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Calculate the figures of merit for the propsed point, Mnew:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">L2:=unapply(Mnew[5]/(1+((x-Mnew[1])/(Mnew[2]/2))^2)+(Mnew[3]*(x-sum(XScaled[k],k=1..NumBins)/NumBins)+Mnew[4]), x):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">chi2:=sum((L2(XScaled[k])-YScaled[k])^2, k=1..NumBins)/(AvgErrorScaled^2):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">a2:=1-statevalf[cdf,chisquare[NumBins-Nvar]](chi2):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Compare Mnew with the last point in the Markov Chain, M[i-1], and decide whether to accept or reject it:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">r1:=a2/a1: r:=r1*r2: <Font style="Text">print(chi1, chi2, a1, a2, r):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Rand2:=evalf(rand(0..1000)()/1000): </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">if Rand2 &lt;= r then   </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">M[i]:=Mnew: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">a[i]:=a2:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">if a[i]&gt;max(seq(a[k],k=0..i-1)) and pegged=false then Nbestfit:=i end if:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">a1:=a2:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Naccept:=Naccept+1: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">else M[i]:=M[i-1]: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">a[i]:=a1:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">end if:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">end do:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Calculate the acceptance rate of your MCMC. This can be adjusted using r2 (raising r2 lowers the standard for accepting a propsed point), or, preferrably, using sigma (lowering sigma increases the number of proposed points that are good fits to the data). Emprical data suggests aiming for <Font italic="true">AcceptRate</Font> ~ 25% for data with  &gt;2 d.o.f. (Gregory 2005) .</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">AcceptRate:=100*evalf(Naccept/N): </Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Calculate parameter pdf's, means, and sigmas:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Cpdf:=histogram([seq(M[i][1], i=BadN..N)], area=N):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Cmean:=describe[mean]([seq(M[i][1], i=BadN..N)]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Csigma:=describe[standarddeviation]([seq(M[i][1], i=BadN..N)]):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Fpdf:=histogram([seq(M[i][2], i=BadN..N)], area=N):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Fmean:=evalf(describe[mean]([seq(M[i][2], i=BadN..N)])):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Fsigma:=describe[standarddeviation]([seq(M[i][2], i=BadN..N)]):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Spdf:=histogram([seq(M[i][3], i=BadN..N)], area=N):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Smean:=describe[mean]([seq(M[i][3], i=BadN..N)]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Ssigma:=describe[standarddeviation]([seq(M[i][3], i=BadN..N)]):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Opdf:=histogram([seq(M[i][4], i=BadN..N)], area=N):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Omean:=describe[mean]([seq(M[i][4], i=BadN..N)]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Osigma:=describe[standarddeviation]([seq(M[i][4], i=BadN..N)]):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Hpdf:=histogram([seq(M[i][5], i=BadN..N)], area=N):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Hmean:=describe[mean]([seq(M[i][5], i=BadN..N)]):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Hsigma:=describe[standarddeviation]([seq(M[i][5], i=BadN..N)]):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Use the point in the MCMC with maximum alpha (<Font italic="true">Nbestfit</Font>) to do final fit</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Compute the baseline and subtract it from the data points. (The baseline is defined such that the offset is at the center of the spectrum, not at x=0):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Baseline:=unapply(M[Nbestfit][3]*(x-sum(XScaled[k],k=1..NumBins)/NumBins)+M[Nbestfit][4], x):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">for i from 1 to NumBins do YFinal[i]:=YScaled[i]-Baseline(XScaled[i]): XFinal[i]:=XScaled[i]: end do:</Text-field><Text-field layout="Normal" style="Text"><Font size="10">Compute the Lorentzian (without the baseline, since the baseline has now been subtracted from the data):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Lf:=unapply(M[Nbestfit][5]/(1+((x-M[Nbestfit][1])/(M[Nbestfit][2]/2))^2), x):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">chif:=sum((Lf(XFinal[k])-YFinal[k])^2, k=1..NumBins)/(AvgErrorScaled^2):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">af:=1-statevalf[cdf,chisquare[NumBins-Nvar]](chif):</Text-field><Text-field layout="Normal" style="Text"><Font size="10">If chi^2 is not equal to 1, then there is some systematic error that has been underestimated or overestimated. The total error (TotError) is the sum of the calculated error (AvgErrorScaled) and the systematic error (SysError):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">SysErrorSqd:=fsolve(sum((Lf(XFinal[k])-YFinal[k])^2,k=1..NumBins)/(AvgErrorScaled^2+x)/(NumBins-Nvar)=1,x):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">TotError:=sqrt(AvgErrorScaled^2+SysErrorSqd):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Compute the Signal, Noise, SNR, Intensity, and Intensity error:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Signal:=evalf((Pi/2)*M[Nbestfit][5]*(M[Nbestfit][2]/BinLengthScaled)):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Noise:=evalf(sqrt((TotError^2)*((Pi/2)*M[Nbestfit][2]/BinLengthScaled))):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">SNR:=Signal/Noise:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Intensity:=Signal*BinLengthScaled:</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Isigma:=Noise*BinLengthScaled:</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"><Font size="10">Produce a graph of the final fit to the data:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">graph3a:=pointplot({seq([XFinal[k],YFinal[k]], k=1..NumBins)}):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">HistDiscont(convert(XFinal,list),convert(YFinal,list)): graph3b:=Histogram: </Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">graph3c:=plot(Lf(x), x=XFinal[NumBins]-BinLengthScaled/2..XFinal[1]+BinLengthScaled/2):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">title3:=cat(Description,`\n`,`SPIFI Raster Position `,RasterPosition):</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text">Print outputs</Text-field><Text-field layout="Normal" style="Text">**************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">fitting method</Text-field><Text-field layout="Normal" style="Text">random number generator seed; "Seed"</Text-field><Text-field layout="Normal" style="Text">MCMC acceptance rate (%)</Text-field><Text-field layout="Normal" style="Text">final reduced chi^2; "chif/(NumBins-Nvar)"</Text-field><Text-field layout="Normal" style="Text">final confidence; "af" (%)</Text-field><Text-field layout="Normal" style="Text">Known Error; "AvgErrorScaled" (K)</Text-field><Text-field layout="Normal" style="Text">Unknown Error Squared; "SysErrorSqd" (K^2)</Text-field><Text-field layout="Normal" style="Text">Total Error; "TotError" (K)</Text-field><Text-field layout="Normal" style="Text">Signal (K*Nbins)</Text-field><Text-field layout="Normal" style="Text">Noise (K*sqrt(Nbins))</Text-field><Text-field layout="Normal" style="Text">SNR</Text-field><Text-field layout="Normal" style="Text">Intensity (K*km/s)</Text-field><Text-field layout="Normal" style="Text">Intensity sigma (K*km/s)</Text-field><Text-field layout="Normal" style="Text">Centroid (km/s)</Text-field><Text-field layout="Normal" style="Text">Centroid sigma (km/s)</Text-field><Text-field layout="Normal" style="Text">FWHM (km/s)</Text-field><Text-field layout="Normal" style="Text">FWHM sigma (km/s)</Text-field><Text-field layout="Normal" style="Text">Slope (K/km/s)</Text-field><Text-field layout="Normal" style="Text">Slope sigma (K/km/s)</Text-field><Text-field layout="Normal" style="Text">Offset (K)</Text-field><Text-field layout="Normal" style="Text">Offset sigma (K)</Text-field><Text-field layout="Normal" style="Text">Height (K)</Text-field><Text-field layout="Normal" style="Text">Height sigma (K)</Text-field><Text-field layout="Normal" style="Text">Height sigma alternative (non-Gauss pdf) (K)</Text-field><Text-field layout="Normal" style="Text">Final list of X values (km/s)</Text-field><Text-field layout="Normal" style="Text">Final list of Y values (K)</Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(`MCMC min fit`):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Seed):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(AcceptRate):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(chif/(NumBins-Nvar)):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(100*af):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(AvgErrorScaled):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(SysErrorSqd):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(TotError):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input">print(Signal):</Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(Noise):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(SNR):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(Intensity):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(Isigma):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(M[Nbestfit][1]):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(Csigma):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(M[Nbestfit][2]):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(Fsigma):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(M[Nbestfit][3]):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(Ssigma):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(M[Nbestfit][4]):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(Osigma):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(M[Nbestfit][5]):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(Hsigma):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">print(TotError*sqrt(chif/(NumBins-Nvar))):</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">for i from 1 to nops(X) do print(XFinal[i]) od:</Font></Text-field><Text-field layout="Normal" prompt="&gt; " style="Maple Input"><Font italic="false" underline="false">for i from 1 to nops(X) do print(YFinal[i]) od:</Font></Text-field><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">*********************************************</Text-field><Text-field layout="Normal" style="Text"/><Text-field prompt="&gt; " style="Maple Input">end proc:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">MCMC_SPIFI_manualXY(`[NII] 205 micron emission in Car I`,`(6,7), LBC`,[236.259,205.586,174.914,144.242,113.570,82.898,52.226,21.553,-9.119,-39.791,-70.463,-101.135,-131.808,-162.480,-193.152,-223.824],[0.1389222,-0.1103345,-0.0928093,0.0859553,-0.2711668,-0.0895290,0.0311870,-0.0381949,0.0382353,0.1664311,0.5845062,0.4836142,-0.2317817,0.0199565,0.0130529,0.3970861],0.205363363,[],[-200,150,15,-30],[61,185,15,90],[-0.005,-0.00025,5.0*10^(-4),-3.0*10^(-4)],[-6,6,.08,0.0],[0,2,.15,.35],5000,0,1,1,5,random,0):</Text-field></Input><Output><Text-field layout="Line Printed Output" style="Line Printed Output">`[NII] 205 micron emission in Car I`
`(6,7), LBC`
236.259
.1389222
.205363363
[]
-200
150
15
-30
61
185
15
90
-0.5e-2
-0.25e-3
0.5000000000e-3
-0.3000000000e-3
-6
6
0.8e-1
0.
0
2
.15
.35
5000
0
1
1
5
`see User Outputs below`
0
Transmission
AntennaVelocity
Flatfield[Pixel]
Gain
Efficiency
FlatVelocity[Pixel]
HOFPIOffset
HOFPISlope
</Text-field></Output><Output><Text-field layout="Line Printed Output" style="Line Printed Output">`MCMC min fit`
1211239906
44.800000000000000000000000000000000000000000000000
.95613617077128315369719840588628449482171597869709
48.452403075936609378333787374188226278190789966013
.20536336300000000000000000000000000000000000000000
-0.1849917996753118863020057704773545471005234509541e-2
.20080884658280533567061553406140187447108557888058
1.8047665386512249951763219086158596241079439604537
.35906968808609757434666254067940560749666179965229
5.0262291653493147434079583853624542072859067386103
55.356160226818103297047180845447369562563678743828
11.013457286914402019875702780226864674259110051295
-81.218541433134101116544933210214316616116463679697
88.703704095722114141196197820780096762270173872787
62.433381251550529805454977270377925514143937144335
40.170082432027884343674562032618449220744979658783
-0.41693424558773655199537910099866900378299219598366e-3
0.34888446172744969869008224507308755748674293286063e-3
-0.5024814350956044440882177529036621780573053695144e-1
0.89605190769853519078039313842215442006220019712548e-1
.56445487039619685550401626812674118158669261427833
.26179633070295278359677089197437933980978345277432
.19635533951553301226850254831104637943134367881607
236.259
205.586
174.914
144.242
113.570
82.898
52.226
21.553
-9.119
-39.791
-70.463
-101.135
-131.808
-162.480
-193.152
-223.824
.28508262699949313936880477559752678310672668195186
0.2303730288458049610945051243259460875369096232446e-1
0.2777429570391344058664824464676343306965902568925e-1
.19375068852324638506384597686093225738562708905404
-.17615961865742067045895629092489891829840484758118
-0.7310025838087725981758558710730093982436784216386e-2
.10061776698124521849543917350343873033353127914840
0.18447242866332575236084910338506555980495559520997e-1
0.82089235685665519713282642552675380296463622885786e-1
.19749682850499846419048037476684420461243168625058
.60278372132433140866767810698101302892839974961536
.48910351414366435314487583919518185324436781298015
-.23908100997124829011447842396975032110866790664725
-0.131017151915345637280691755581496792699843282464e-3
-0.19822824332582401160082959541412672476731779917675e-1
.35142216848675054331711477267275615183923628344711
</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">display(graph3a,{op(graph3b),graph3c,<Font size="10">plot(0, x=XFinal[1]+BinLengthScaled/2..XFinal[NumBins]-BinLengthScaled/2,color=black)</Font>}, axes=boxed, title=title3, <Font italic="false" size="10" underline="false">titlefont=[Times,14,bold], labels=["LSR Velocity (km/s)","Main Beam Temperature (K)"], labelfont=[Arial,11,bold], font=[Arial,11,bold], labeldirections=[horizontal,vertical]</Font>);</Text-field></Input><Output><Text-field layout="Maple Plot"><Plot height="582" plot-scale="1.0" plot-xtrans="0.0" plot-ytrans="0.0" type="two-dimensional" width="584">LSUlUExPVEc2SS0lJ1BPSU5UU0c2MjckJCEnX0o+ISIkJCFTdnciKno8dHdDbjc5YWZIM2c2UyNlS1YjRyMpPiEjXjckJCEnIVtpIkYrJCFRa0NHVikqcCN6J1wiZWI8cCFHUGNNOj46PDU4Ri43JCQhJzM9OEYrJCFTRFptIXptMzZLXShwUlV5VzYhSFs3KCo0NTNSIyEjXTckJCEnTjY1RiskIlM6ISlIInlPV0smPT0mPlJlKFs5YFZtVlReLiIqW0Y5NyQkISZqLyhGKyQiU086J1woKlJHKkdJLCIpcDV5d20zOUxDOHMkeS0nRjk3JCQhJiJ6UkYrJCJTZV1pb0pDaC9VJW93dS5bIT5rJSkqXF1Hb1woPkY5NyQkISU+IipGKyQiUyd5JilHaWprSCFRdkViVUVHOCg+Ym0mb04jKjMjKUYuNyQkIiZgOiNGKyQiUygqNF9mYlwhKWZiMSZRLiJcM09fZEtqJ0dDWiU9Ri43JCQiJ1VVOUYrJCJTL2EhKjNGY1FkQSQ0J28oZiVRMSZRWUtfKW9dUD5GOTckJCEnQ1FBRiskIlM2Wk1HTyNSPTpjRm5zWjY8TGFdbltvQFVeJEY5NyQkIic5XDxGKyQiUkQqb0QhZidwSVZqbmtXI1ttZVNNIlJxJkh1eCNGOTckJCInJ2UwI0YrJCJSWUNCJzRwYCgzWWZLQ15dJTRoXCFlJSlHSVBJI0Y5NyQkIidxTjZGKyQhUz0iZVpbUylIPSopKlsjNEhjKmUvbj91bD0nZmg8Rjk3JCQiJikqRylGKyQhUidRO1V5T0MpUjRJMnJlJmU8KWZzKDNRZS01dEYuNyQkIiZFQSZGKyQiU1NbIno3YEwudFFNXXQiUmFcPV9DIilwdzwxNUY5NyQkIidmaUJGKyQiUyc9Jj5vRW41JHlFdmZ2WiEpbyRSSlwqKnBpIzMmR0Y5LSUnQ1VSVkVTRzYkN2JvNyQkITMrKysrKzVnIlIjISM6JCIzIil5ayxFKTNANyMhIz43JCQhM3NtXVpLLmolRyNGXHEkIjM5aWdfXioqKnlVI0ZfcTckJCEzWXQxakVkYiI+I0ZccSQiM21lUUMneS0sdiNGX3E3JCQhM3ExJiopemYkKW8zI0ZccSQiMyk+QDFNVyRwJD4kRl9xNyQkITNpWVhgTXdeIik+RlxxJCIzU2VTOjNGO2JQRl9xNyQkITNNJFI2clhfbSg9RlxxJCIzK2YiW3IzLitaJUZfcTckJCEzd1lJJ1IsSCV6PEZccSQiM2w9MV5AJ1taSyZGX3E3JCQhMzNTWCkqcChmKHk7RlxxJCIzbyYqb1snWyhSJFsnRl9xNyQkITNzRUomUVxaWWQiRlxxJCIzU2QqPSdcYksuIilGX3E3JCQhMzdnOzYyInAzWiJGXHEkIjNUYCh5W15vXy4iISM9NyQkITNPYEdPIUc/VE8iRlxxJCIzISopUWxeJkcsbzhGXXQ3JCQhMyEqei4sbyEzckoiRlxxJCIzd0ksaicpSCozYyJGXXQ3JCQhM3MxemxiZTRxN0ZccSQiMykqKjQqSGp4JDR6IkZddDckJCEzSEw3T1I3PDw3RlxxJCIzPFE4YChmYFA1I0ZddDckJCEzK2dYMUJtQ2s2RlxxJCIzIT4pXF5TW1olWyNGXXQ3JCQhMygqeiUzS3AvNjYiRlxxJCIzIlxEKCpcLSVlV0hGXXQ3JCQhMyUqKlJfTHdpejAiRlxxJCIzI1xPKj10LGElWyRGXXQ3JCQhMzBnVDs6bk5LNUZccSQiM1UkbyRlS2JXcFBGXXQ3JCQhMyw/ZihwbV1uKyJGXHEkIjMneUtUPiVHSWxTRl10NyQkITN1Knp3eT1ZOSIpKiEjOyQiMycqR0lXO1BrbFZGXXQ3JCQhM08qUiUqZnEmUWImKkZedyQiM3V1XEd6Zl5oWUZddDckJCEzZUwzJCkzM0whNCpGXnckIjMhXG41djtkKlteRl10NyQkITNQbXNtNmZGRCcpRl53JCIzaTE2YkE+WixiRl10NyQkITNRQ3NAKTRGcVspRl53JCIzcSEqWzt6Jlwkb2JGXXQ3JCQhM3kkPW5aR3koWyQpRl53JCIzLSlmWCUqKXooW2gmRl10NyQkITN5aUAveVFseiMpRl53JCIzIj0mPiRHMGksaiZGXXQ3JCQhM3hUckpyJUgwQClGXnckIjMiPnQyQm0oKipSY0ZddDckJCEzeD9AZmtdU1QiKUZedyQiM2ApXGFqSUZWayZGXXQ3JCQhM3cqNG55bCFHcyEpRl53JCIzQktHKUdkREprJkZddDckJCEzPTxxJzQuJHkmeihGXnckIjNjPzg2YXdpJGUmRl10NyQkITM7THAxL2FHPnZGXnckIjM2M1BZOSMqeVRhRl10NyQkITN1SzhmKCllIzMwKEZedyQiMyEpPk42Jz0kM11dRl10NyQkITN1TGQ2cmpPI2UnRl53JCIzLD4hPl1LMi5hJUZddDckJCEzb1xMMXo5ISo0akZedyQiM2ZaODouNDJBVUZddDckJCEzTm00LChlT3UuJ0ZedyQiM2Y1RFBhaiVSIVJGXXQ3JCQhMy0kZWVccHJcdyZGXnckIjNRIkcpcCYqPjwmZiRGXXQ3JCQhM1MraSFIIW9dI1wmRl53JCIzdGgoKTRDayc+SSRGXXQ3JCQhM2VtXDw0Ozo1XUZedyQiMzxfSkoqUSpISkdGXXQ3JCQhM1tMUFc6a3pGWEZedyQiMzNWJlJVKHk9RkNGXXQ3JCQhMydvJ1x0PWpkKSpSRl53JCIzKXlFVzhnYWwwI0ZddDckJCEzQytpLUFpTnBNRl53JCIzSyVbSUsjPUdfPEZddDckJCEzJSkqUjMuYThhJ0hGXnckIjNTRCUzIj1tKVFeIkZddDckJCEzOSsxZmUzWmhDRl53JCIzZnJxbCZcIlI7OEZddDckJCEzSUxMJ2ZAWyk0OUZedyQiM3lLJVEmWyk9USsiRl10NyQkITNpTGByKlsuOFclISM8JCIzKiplOjxObVkyISlGX3E3JCQiM0dMTEpYJG9fKGZGXF9sJCIzOUhkJkglPSJIVCdGX3E3JCQiM1lMRngmKmVeejtGXnckIjMhb0VESTMnUik+JkZfcTckJCIzLythR2EwUkBFRl53JCIzMS85Jz0menElUiVGX3E3JCQiM1JMJnkqKSk0a1FPRl53JCIzSSQpZldjTj86UEZfcTckJCIzKSoqPlZnQWcmKm8lRl53JCIzWXpETlVmV2pKRl9xNyQkIjMqKSpSXzxuendyJkZedyQiMzQtaDFzKil6S0ZGX3E3JCQiM3QqKkhSKyJRQ3InRl53JCIzeSsjKVFPbGYkUiNGX3E3JCQiM1MqPkhQdFpwInlGXnckIjM1cHR5ZUw9JjMjRl9xNyQkIjNJbUFMaygpUjQpKUZedyQiM10wLCRbXydwYj1GX3E3JCQiM0kqKj4kUjJfIXApKkZedyQiM3k4IWY3Rk8oXDtGX3E3JCQiM0tMeXlZYiNIMyJGXHEkIjNnbWg/MCw1IlwiRl9xNyQkIjMrZzgvUzYhej0iRlxxJCIzIlImb1dnKTRCTSJGX3E3JCQiM2VZT04jKlxuJ0ciRlxxJCIzWSM9aV5hNztBIkZfcTckJCIzKSlmPVRHQCMqKlEiRlxxJCIzdlgjZitoXD42IkZfcTckJCIzIW8xbmQybDNcIkZccSQiMyFldGNzKj5MPTVGX3E3JCQiMzkrRHUnKUhhJ2YiRlxxJCIzZlV2dTdOIlFLKiEjPzckJCIzQSRcSF5QQiQpcCJGXHEkIjNrcmxiKSkpM1dmKUZfZGw3JCQiM1Q4Q3NBJjNDIT1GXHEkIjMmPi44MzohPUx6Rl9kbDckJCIzcDE9dSN6SmMhPkZccSQiMylSSXAuXzgoXHRGX2RsNyQkIjMyP2JgZEtbKz9GXHEkIjNVNS95QlNIb29GX2RsNyQkIjN0RTk8U1A+NEBGXHEkIjNDMyQzXmwsQlAnRl9kbDckJCIzSmAhKXkicERrPyNGXHEkIjNxI1wyJyl6c0UoZkZfZGw3JCQiMyoqekw0S180NUJGXHEkIjNTPV1AIWUlXCdlJkZfZGw3JCQiMy9nMzU1LUs0Q0ZccSQiM2FoWHlXJDQzRCZGX2RsNyQkIjMtKysrKzUmZl4jRlxxJCIzQ0whWyIzTGlBXEZfZGwtJSZDT0xPUkc2JiUkUkdCRyQiIzUhIiIkIiIhRmNnbEZkZ2wtRmZwNiQ3UzckRmpwJEZlZ2xGZWdsNyRGYXFGamdsNyRGZnFGamdsNyRGW3JGamdsNyRGYHJGamdsNyRGZXJGamdsNyQkITNbWUknUixIJXo8RlxxRmpnbDckRl9zRmpnbDckJCEzV0VKJlFcWllkIkZccUZqZ2w3JEZpc0ZqZ2w3JEZfdEZqZ2w3JCQhM2UxemxiZTRxN0ZccUZqZ2w3JCQhMycpZlgxQm1DazZGXHFGamdsNyQkITMzK0NOakYnejAiRlxxRmpnbDckRmJ3RmpnbDckJCEzJlxFbjsiZkZEJylGXndGamdsNyQkITN0SnAxL2FHPnZGXndGamdsNyQkITMhNHQ6NlBtQmUnRl53RmpnbDckRmJcbEZqZ2w3JCQhMz5NUFc6a3pGWEZed0ZqZ2w3JCQhMzcpPkU/QWMkcE1GXndGamdsNyQkITNzKWYhZmUzWmhDRl53RmpnbDckJCEzaklMJ2ZAWyk0OUZed0ZqZ2w3JCQhM1YmSDooKlsuOFclRlxfbEZqZ2w3JCQiM2lRTEpYJG9fKGZGXF9sRmpnbDckJCIzQ05GeCYqZV56O0Zed0ZqZ2w3JCQiM2cuYUdhMFJARUZed0ZqZ2w3JCQiMzVNJnkqKSk0a1FPRl53RmpnbDckJCIzYyk+VmdBZyYqbyVGXndGamdsNyQkIjNZKVJfPG56d3ImRl53RmpnbDckJCIzOixJUisiUUNyJ0Zed0ZqZ2w3JEZjYWxGamdsNyQkIjNYakFMaygpUjQpKUZed0ZqZ2w3JCQiMyswPyRSMl8hcCkqRl53RmpnbDckJCIzWUx5eVliI0gzIkZccUZqZ2w3JCQiM2VnOC9TNiF6PSJGXHFGamdsNyQkIjNJWU9OIypcbidHIkZccUZqZ2w3JCQiMztnPVRHQCMqKlEiRlxxRmpnbDckJCIzXW1xd3ZdJzNcIkZccUZqZ2w3JEZbZGxGamdsNyQkIjN5JFxIXlBCJClwIkZccUZqZ2w3JEZmZGxGamdsNyQkIjMpcCE9dSN6SmMhPkZccUZqZ2w3JCQiM04/YmBkS1srP0ZccUZqZ2w3JCQiM0hGOTxTUD40QEZccUZqZ2w3JCQiMylRMCl5InBEaz8jRlxxRmpnbDckJCIzYyFRJDRLXzQ1QkZccUZqZ2w3JCQiM0tnMzU1LUs0Q0ZccUZqZ2w3JEZpZmxGamdsLUZeZ2w2JkZgZ2xGZGdsRmRnbEZkZ2wtRmZwNiM3JDckJCJTKysrKysrKysrKysrKysrKysrKysrXUE0QSEjWkZfbzckJCJTKysrKysrKysrKysrKysrKysrKysrK10tPkZnX21GX28tRmZwNiM3JDckJCJTKysrKysrKysrKysrKysrKysrKysrKyZmXiNGZ19tRmNwNyRGZV9tRmNwLUZmcDYjNyQ3JEZpX21Gam43JCQiUysrKysrKysrKysrKysrKysrKysrKyt5JmYiRmdfbUZqbi1GZnA2IzckNyRGZ2BtRlY3JCQiUysrKysrKysrKysrKysrKysrKysrKysxKkciRmdfbUZWLUZmcDYjNyQ3JEZeYW1GZG83JCQiUysrKysrKysrKysrKysrKysrKysrKytTQikqISNbRmRvLUZmcDYjNyQ3JEZlYW1GaW83JCQiUysrKysrKysrKysrKysrKysrKysrKys/Y25GZ2FtRmlvLUZmcDYjNyQ3JEZdYm1GXnA3JCQiUysrKysrKysrKysrKysrKysrKysrKysmKilvJEZnYW1GXnAtRmZwNiM3JDckRmRibUZRNyQkIlIrKysrKysrKysrKysrKysrKysrKysrcUAnRmdhbUZRLUZmcDYjNyQ3JEZbY21GTDckJCFTKysrKysrKysrKysrKysrKysrKysrK11YQ0ZnYW1GTC1GZnA2IzckNyRGYmNtRkc3JCQhUysrKysrKysrKysrKysrKysrKysrKytxN2JGZ2FtRkctRmZwNiM3JDckRmljbUZCNyQkIVMrKysrKysrKysrKysrKysrKysrKysrISp6JilGZ2FtRkItRmZwNiM3JDckRmBkbUY9NyQkIVMrKysrKysrKysrKysrKysrKysrKytdcms2RmdfbUY9LUZmcDYjNyQ3JEZnZG1GNzckJCFTKysrKysrKysrKysrKysrKysrKysrK1dyOUZnX21GNy1GZnA2IzckNyRGXmVtRjI3JCQhUysrKysrKysrKysrKysrKysrKysrKys7eTxGZ19tRjItRmZwNiM3JDckRmVlbUYsNyQkIVMrKysrKysrKysrKysrKysrKysrKysrKVszI0ZnX21GLC1GZnA2IzckNyRGXGZtRmVuNyQkIVMrKysrKysrKysrKysrKysrKysrKysrZyJSI0ZnX21GZW4tRmZwNiM3JEZhYG1GZF9tLUZmcDYjNyRGaF9tRmVgbS1GZnA2IzckRmZgbUZcYW0tRmZwNiM3JEZdYW1GY2FtLUZmcDYjNyRGZGFtRltibS1GZnA2IzckRlxibUZiYm0tRmZwNiM3JEZjYm1GaWJtLUZmcDYjNyRGamJtRmBjbS1GZnA2IzckRmFjbUZnY20tRmZwNiM3JEZoY21GXmRtLUZmcDYjNyRGX2RtRmVkbS1GZnA2IzckRltmbUZhZm0tRmZwNiM3JEZmZG1GXGVtLUZmcDYjNyRGXWVtRmNlbS1GZnA2IzckRmRlbUZqZW0tJSZUSVRMRUc2JFFeb1tOSUldfjIwNX5taWNyb25+ZW1pc3Npb25+aW5+Q2Fyfkl8K1NQSUZJflJhc3Rlcn5Qb3NpdGlvbn4oNiw3KSx+TEJDNiItSSVGT05UR0ZmaW02JUkmVGltZXNHRmZpbSIjOUklYm9sZEdGZmltLSUrQVhFU0xBQkVMU0c2J1E0TFNSflZlbG9jaXR5fihrbS9zKUZmaW1ROk1haW5+QmVhbX5UZW1wZXJhdHVyZX4oSylGZmltLUZoaW02JUkmQXJpYWxHRmZpbSIjNkZcam0lK0hPUklaT05UQUxHJSlWRVJUSUNBTEctJSpBWEVTU1RZTEVHNiMlJEJPWEctJSVWSUVXRzYkOyQhKCw7UiMhIiUkIjIvKysrK15mXiMhIzk7JCEyKSlmcmYvJD1mREZcX2wkIjBWLSZmLEAnPidGXHFGYmpt</Plot></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">display(array([Cpdf,Fpdf,Hpdf,Spdf,Opdf]));</Text-field></Input><Output><Text-field layout="Maple Plot"><Plot height="175" plot-scale="1.0" plot-xtrans="0.0" plot-ytrans="0.0" type="two-dimensional" width="1228"></Plot></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">display(graph1a,{op(graph1b)});</Text-field></Input><Output><Text-field layout="Maple Plot"><Plot height="400" plot-scale="1.0" plot-xtrans="0.0" plot-ytrans="0.0" type="two-dimensional" width="400">LSUlUExPVEc2RC0lJ1BPSU5UU0c2MzckJCErIyl6ei45ISIoJCImb2kkISIpNyQkIitDSF5WSEYrJCInPl1XISIqNyQkIisjbyZlJGUjRiskISctZ15GNDckJCIraVEnb0YjRiskIidqa1pGNDckJCIrOjBtKCk+RiskISdiISlwRjQ3JCQiK0AtVWo7RiskIicnKSkpKSkhIzU3JCQiKywlKXBjOEYrJCInPTZZRjQ3JCQiKyJldypcNUYrJCEnMiIqKikhIzY3JCQiKy93YUt1Ri4kIidAW2ZGSTckJCIrLCVIYE8lRi4kIidgIW8nRjQ3JCQiKyk+NiIpSCJGLiQiJ0VIOUYuNyQkISswcTVwPEYuJCInOjI5RjQ3JCQhKzNfS09bRi4kIidPaCgpRjQ3JCQhKlRWTiF6RiskIickekgnRjQ3JCQhK2hoMig0IkYrJCInPU16RjQ3JCQhK1dxV3E/RiskIicvbjZGNDckJCErLSk+MHIiRiskIicnKkc6RjQtJSdDVVJWRVNHNiM3JDckJCFTKysrKysrKysrKysrKysrKysrKytCTVshKj0hI1pGZXA3JCQhUysrKysrKysrKysrKysrKysrKysrYXohUUEjRmNxRmVwLUZdcTYjNyQ3JCQiUysrKysrKysrKysrKysrKysrKysrc1pBSUNGY3FGODckRltyRj0tRl1xNiM3JDckJCJTKysrKysrKysrKysrKysrKysrK10pPWlBOCNGY3FGPTckRmJyRkItRl1xNiM3JDckJCJTKysrKysrKysrKysrKysrKysrKytvLmFEPUZjcUZCNyRGaXJGRy1GXXE2IzckNyQkIlMrKysrKysrKysrKysrKysrKysrKzYkZiteIkZjcUZHNyRGYHNGTS1GXXE2IzckNyQkIlMrKysrKysrKysrKysrKysrKysrKyJcUEw/IkZjcUZNNyRGZ3NGUi1GXXE2IzckNyQkIlMrKysrKysrKysrKysrKysrKysrKzJuOm0qKSEjW0ZSNyRGXnRGWC1GXXE2IzckNyQkIlMrKysrKysrKysrKysrKysrKysrXS0mUSopKmVGYHRGWDckRmZ0RmduLUZdcTYjNyRGXXJGYXItRl1xNiM3JDckJCJTKysrKysrKysrKysrKysrKysrK10qSD88JEdGYHRGZ243JEZgdUZcby1GXXE2IzckNyQkIlMrKysrKysrKysrKysrKysrKysrK1hsWkJKRmNxRjI3JCQiUysrKysrKysrKysrKysrKysrKysrLiRcTncjRmNxRjItRl1xNiM3JDckRmp1RjhGanEtRl1xNiM3JDckJCFSKysrKysrKysrKysrKysrKysrK10uelxOI0ZgdEZcbzckRmR2RmFvLUZdcTYjNyQ3JCQhUysrKysrKysrKysrKysrKysrKytdMWhyLUxGYHRGYW83JEZbd0Zmby1GXXE2IzckRml1Rl92LUZdcTYjNyRGZHJGaHItRl1xNiM3JEZbc0Zfcy1GXXE2IzckRmJzRmZzLUZdcTYjNyRGaXNGXXQtRl1xNiM3JEZhdEZldC1GXXE2IzckRmh0Rl91LUZdcTYjNyQ3JCQhUysrKysrKysrKysrKysrKysrKysrNUQ6UCUqRmB0RltwNyRGZ3hGYHAtRl1xNiM3JDckJCFTKysrKysrKysrKysrKysrKysrKys0ViQqcGpGYHRGZm83JEZeeUZbcC1GXXE2IzckNyQkIVMrKysrKysrKysrKysrKysrKysrXXJxVl03RmNxRmBwNyRGZXlGLC1GXXE2IzckNyQkIVMrKysrKysrKysrKysrKysrKysrKyMqKWVyYiJGY3FGLDckRlx6RmpwLUZdcTYjNyRGYnVGY3YtRl1xNiM3JEZmdkZqdi1GXXE2IzckRl13Rl15LUZdcTYjNyQ3JEZhcUZqcEZgcS1GXXE2IzckRmB5RmZ4LUZdcTYjNyRGaXhGZHktRl1xNiM3JEZneUZbei1GXXE2IzckRl56RltbbA==</Plot></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/></Worksheet>